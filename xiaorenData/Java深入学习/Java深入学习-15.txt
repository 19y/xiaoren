[{"题干":"进程的英文单词表述是","选项F":"","选项E":"","选项D":"task","答案":"C","选项C":"process","选项B":"thread","选项A":"program","类型":"1-单选"},{"题干":"下列是关于线程的描述，其中说法正确的是","选项F":"","选项E":"","选项D":"线程必须依赖于进程而存在","答案":"D","选项C":"两个进程可以共用同一个线程","选项B":"一个线程一定有多个进程","选项A":"一个进程一定有多个线程","类型":"1-单选"},{"题干":"下列不属于线程的状态是","选项F":"","选项E":"","选项D":"稳定态","答案":"D","选项C":"阻塞状态","选项B":"运行状态","选项A":"就绪状态","类型":"1-单选"},{"题干":"关于线程和进程对比说法正确的是","选项F":"","选项E":"","选项D":"进程是分配资源的基本单位和独立运行的基本单位，线程是独立调度的基本单位。","答案":"C","选项C":"进程是分配资源的基本单位和独立调度的基本单位，线程是独立运行的基本单位。","选项B":"线程是分配资源的基本单位，进程是独立运行和独立调度的基本单位。","选项A":"进程是分配资源的基本单位，线程是独立运行和独立调度的基本单位。","类型":"1-单选"},{"题干":"关于Runnable和Thread说法正确的是","选项F":"","选项E":"","选项D":"Runnable和Thread都可以实现多线程","答案":"D","选项C":"Runnable是抽象类，而Thread是接口","选项B":"Runnable和Thread都是实现多线程的抽象类","选项A":"Runnable和Thread都是实现多线程的接口","类型":"1-单选"},{"题干":"获取当前线程的方法是","选项F":"","选项E":"","选项D":"getId()","答案":"C","选项C":"Thread.currentThread()","选项B":"getPriority()","选项A":"interrupt()","类型":"1-单选"},{"题干":"使用Thread创建线程，设置线程的优先级别范围是","选项F":"","选项E":"","选项D":"1~10","答案":"D","选项C":"0~5","选项B":"1~50","选项A":"1~100","类型":"1-单选"},{"题干":"interrupt和stop都是Thread类中提供终止线程的方法，下列说法正确的是","选项F":"","选项E":"","选项D":"interrupt在JDK1.8已经被废弃","答案":"A","选项C":"interrupt比stop更快速","选项B":"Interrupted不能被捕获异常","选项A":"interrupt比stop更安全","类型":"1-单选"},{"题干":"关于Thread类中sleep方法说法不正确是","选项F":"","选项E":"","选项D":"参数的单位是秒","答案":"D","选项C":"只能让当先前线程进入睡眠状态","选项B":"是静态方法","选项A":"使用的时候必须处理异常","类型":"1-单选"},{"题干":"Thread类启动线程的方法是","选项F":"","选项E":"","选项D":"run","答案":"A","选项C":"setDeamon","选项B":"resume","选项A":"start","类型":"1-单选"},{"题干":"下列线程的方法中，不会改变该线程的生命周期中状态的方法是（    ）","选项F":"","选项E":"","选项D":"isAlive()","答案":"D","选项C":"sleep()","选项B":"wait()","选项A":"yield()","类型":"1-单选"},{"题干":"在java中允许创建多线程应用程序的接口是（    ）","选项F":"","选项E":"","选项D":"Threadable","答案":"A","选项C":"Interface","选项B":"Clonable","选项A":"Runnable","类型":"1-单选"},{"题干":"线程调用了sleep（）方法后，该线程将进入（\u00A0\u00A0\u00A0 ）状态","选项F":"","选项E":"","选项D":"终止状态","答案":"C","选项C":"阻塞状态","选项B":"运行状态","选项A":"可运行状态","类型":"1-单选"},{"题干":"一个线程在任何时刻都处于某种线程状态（thread state）,例如运行状态、阻塞状态、就绪状态等。一个线程可以由选项中的哪种线程状态直接到达运行状态？(    )","选项F":"","选项E":"","选项D":"就绪状态","答案":"D","选项C":"阻塞状态（对象wait池内）","选项B":"阻塞状态（对象lock池内）","选项A":"死亡状态","类型":"1-单选"},{"题干":"Java语言中提供了一个▁线程，自动回收动态分配的内存","选项F":"","选项E":"","选项D":"垃圾收集","答案":"D","选项C":"守护","选项B":"消费者","选项A":"异步","类型":"1-单选"},{"题干":"在线程中的▁方法终止时，能使线程进入死亡状态","选项F":"","选项E":"","选项D":"sleep//线程休眠","答案":"A","选项C":"yield//暂停当前线程的执行 \u00A0执行其他线程","选项B":"setPrority//更改线程优先级","选项A":"run","类型":"1-单选"},{"题干":"在线程中用▁方法可以改变线程的优先级","选项F":"","选项E":"","选项D":"sleep//线程休眠","答案":"B","选项C":"yield//暂停当前线程的执行 \u00A0执行其他线程","选项B":"setPrority//更改线程优先级","选项A":"run","类型":"1-单选"},{"题干":"以下方法中线程通过▁▁方法可以休眠一段时间，然后恢复运行","选项F":"","选项E":"","选项D":"sleep//线程休眠","答案":"D","选项C":"yield//暂停当前线程的执行 \u00A0执行其他线程","选项B":"setPrority//更改线程优先级","选项A":"run","类型":"1-单选"},{"题干":"以下▁▁方法可以用来暂时停止当前线程的运行","选项F":"","选项E":"","选项D":"sleep//线程休眠","答案":"A","选项C":"wait","选项B":"yield","选项A":"stop","类型":"1-单选"},{"题干":"下代码创建一个新线程并启动线程，问:可以保证正确代码创建target对象，并能编译正确的是（    ）\npublic static void main(String[] args) {\n\n          Runnable target=new MyRunnable( ); \n\n          Thread myThread=new Thread(target);\n\n}","选项F":"","选项E":"","选项D":"public class MyRunnable  implements Runnable  {\n\n         void run( ) { } }","答案":"C","选项C":"public class MyRunnable  implements Runnable  {\n\n         public void run( ) {        }\n\n}","选项B":"public class MyRunnable extends Runnable {\n\n         void run( ) {  }\n\n}","选项A":"public class MyRunnable extends Runnable {\n\n         public void run( ) {        }\n\n}","类型":"1-单选"},{"题干":"以下是关于进程的说法，其中正确的有","选项F":"","选项E":"","选项D":"一个可执行的程序就是运行起来就是一个进程","答案":"ACD","选项C":"进程有自己独立的地址空间","选项B":"进程中一定有多个线程","选项A":"进程是操作系统分配资源的基本单位","类型":"2-多选"},{"题干":"线程相对于进程的优点有","选项F":"","选项E":"","选项D":"线程执行开销小，但不利于资源的管理和保护","答案":"ABC","选项C":"使程序健壮，不会因为一个线程死掉就使得整个进程死掉","选项B":"进程在执行过程中拥有独立的内存单元，而多个线程共享内存，从而极大地提高了程序的运行效率。","选项A":"线程的划分尺度小于进程，使得多线程程序的并发性高","类型":"2-多选"},{"题干":"进程的状态有","选项F":"","选项E":"","选项D":"环绕","答案":"ABC","选项C":"阻塞","选项B":"运行","选项A":"就绪","类型":"2-多选"},{"题干":"Trhead类中关于interrupt（）和interrupted()说法正确的是","选项F":"","选项E":"","选项D":"interrupted作用于当前线程，返回的是当前线程的中断状态","答案":"ABCD","选项C":"interrupted是静态方法","选项B":"interrupt是用来设置中断状态的","选项A":"interrupt方法用于中断线程。","类型":"2-多选"},{"题干":"下列关于Runnable说法正确是","选项F":"","选项E":"","选项D":"使用的时候必须实现run函数","答案":"AD","选项C":"它是JDK1.8之后才有的","选项B":"实现多线程必须要实现该接口","选项A":"是一个函数式接口","类型":"2-多选"},{"题干":"以下可以导致线程不能运行的有","选项F":"","选项E":"","选项D":"挂起及由于I/O操作而阻塞","答案":"ABC","选项C":"休眠","选项B":"阻塞","选项A":"等待","类型":"2-多选"},{"题干":"以下属于线程的状态也就是它的生命周期的有","选项F":"","选项E":"","选项D":"阻塞状态","答案":"ABCD","选项C":"死亡状态","选项B":"运行状态","选项A":"新建状态","类型":"2-多选"},{"题干":"以下能够使线程转化为阻塞状态的方法有","选项F":"","选项E":"","选项D":"join()","答案":"ABCD","选项C":"interrupt ()","选项B":"wait()","选项A":"sleep()","类型":"2-多选"},{"题干":"在Java多线程开发中，关于线程的优先级说法中，正确的是","选项F":"","选项E":"","选项D":"线程的优先级的范围在1-10之间","答案":"BD","选项C":"在创建线程后的任何时候都可以重新设置","选项B":"线程的优先级是在创建线程时设置的","选项A":"线程的优先级是不能改变的","类型":"2-多选"},{"题干":"以下选项中关于Java中线程控制方法的说法正确的是","选项F":"","选项E":"","选项D":"setDaemon( )的作用是将指定的线程设置成后台线程","答案":"AD","选项C":"yield ( ) 的作用是使线程停止运行一段时间，将处于阻塞状态","选项B":"sleep ( ) 的作用是让当前正在执行线程暂停，线程将转入就绪状态","选项A":"join ( ) 的作用是阻塞指定线程等到另一个线程完成以后再继续执行","类型":"2-多选"},{"题干":"进程既是基本的分配单元，也是基本的执行单元","选项F":"","选项E":"","选项D":"","答案":"B","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"使用多线程需要考虑线程同步的问题","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"线程调度方式主要是协同式线程调度和抢占式调度","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"wait 是 Thread类中直接定义的方法","选项F":"","选项E":"","选项D":"","答案":"B","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"使用Thread类定义的对象可以调用其wait方法","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"如果线程死亡，它便不能运行","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"在多线程处理中，高优先级的可运行线程会抢占低优先级线程","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"在Java的多线程编程中没有安全问题","选项F":"","选项E":"","选项D":"","答案":"B","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"线程A中执行线程B的join()方法，则线程A等待直到B执行完成","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"currentThread()方法返回当前线程的引用","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"}]