[{"题干":"______模块是 python 支持多线程编程的重要模块","选项F":"","选项E":"","选项D":"line","答案":"B","选项C":"lines","选项B":"threading","选项A":"threads","类型":"1-单选"},{"题干":"已知矩阵A为[1,2]，矩阵B为[[2],[1]]，A*B的结果为","选项F":"","选项E":"","选项D":"无法计算","答案":"B","选项C":"[[2],[1]]","选项B":"4","选项A":"[1,2]","类型":"1-单选"},{"题干":"设A=[[2,-1],[-1,1]]则A的逆矩阵是","选项F":"","选项E":"","选项D":"该矩阵A没有逆矩阵","答案":"A","选项C":"[[-1,-2],[-1,1]]","选项B":"[[2,1],[1,1]]","选项A":"[[1,1],[1,2]]","类型":"1-单选"},{"题干":"threading.__________：返回当前处于alive状态的Thread对象数量","选项F":"","选项E":"","选项D":"threading.enumerate()","答案":"A","选项C":"threading.get_ident()","选项B":"threading.current_thread()","选项A":"threading.active_count()","类型":"1-单选"},{"题干":"Python内置函数________用来返回序列中的最大元素","选项F":"","选项E":"","选项D":"max()","答案":"D","选项C":"big()","选项B":"min()","选项A":"huge()","类型":"1-单选"},{"题干":"Queue模块允许用户创建一个可以用于多个线程之间_________的队列数据结构","选项F":"","选项E":"","选项D":"共享数据","答案":"D","选项C":"线程管理","选项B":"处理异常","选项A":"无正确答案","类型":"1-单选"},{"题干":"python3 支持多线程编程的重要模块是__","选项F":"","选项E":"","选项D":"line","答案":"B","选项C":"lines","选项B":"threading","选项A":"threads","类型":"1-单选"},{"题干":"启动大量的子进程时，可以用什么方式批量创建子进程","选项F":"","选项E":"","选项D":"进程类","答案":"A","选项C":"进程参数","选项B":"进程函数","选项A":"进程池","类型":"1-单选"},{"题干":"用什么函数来启动线程","选项F":"","选项E":"","选项D":"begin","答案":"A","选项C":"run","选项B":"open","选项A":"start","类型":"1-单选"},{"题干":"已知矩阵A为[1,2]，矩阵B为[[2],[1]]，则A*B为","选项F":"","选项E":"","选项D":"无法计算","答案":"B","选项C":"[[2],[1]]","选项B":"4","选项A":"[1,2]","类型":"1-单选"},{"题干":"设A=[[2,-1],[-1,1]]  A的逆矩阵是","选项F":"","选项E":"","选项D":"该矩阵A没有逆矩阵","答案":"A","选项C":"[[-1,-2],[-1,1]]","选项B":"[[2,1],[1,1]]","选项A":"[[1,1],[1,2]]","类型":"1-单选"},{"题干":"返回当前处于alive状态的Thread对象数量为：threading.__________：","选项F":"","选项E":"","选项D":"threading.enumerate()","答案":"A","选项C":"threading.get_ident()","选项B":"threading.current_thread()","选项A":"threading.active_count()","类型":"1-单选"},{"题干":"内置函数中，用来返回序列中的最大元素","选项F":"","选项E":"","选项D":"max()","答案":"D","选项C":"big()","选项B":"min()","选项A":"huge()","类型":"1-单选"},{"题干":"在本月学习中，Queue模块允许用户创建一个可以用于多个线程之间_________的队列数据结构","选项F":"","选项E":"","选项D":"共享数据","答案":"D","选项C":"线程管理","选项B":"处理异常","选项A":"无正确答案","类型":"1-单选"},{"题干":"在Python中，执行下列语句后的显示结果是什么? \nprint(type({1,2}))","选项F":"","选项E":"","选项D":"<class 'list'>","答案":"C","选项C":"<class 'set'>","选项B":"<class 'complex'>","选项A":"<class 'tuple'>","类型":"1-单选"},{"题干":"在Python中，执行下列语句后的显示结果是什么? \na = [2,3,None,(),[],{}]\nprint(len(a))","选项F":"","选项E":"","选项D":"7","答案":"C","选项C":"6","选项B":"5","选项A":"4","类型":"1-单选"},{"题干":"python3中，表达式set([1,1,3,3,2,2,3])的值为","选项F":"","选项E":"","选项D":"list","答案":"C","选项C":"{1, 2, 3}","选项B":"{3, 2, 1}","选项A":"{1, 3, 2}","类型":"1-单选"},{"题干":"在Python中，执行下列语句后的显示结果是什么? \ncounter = 1\ndef doLotsOfStuff(): \n    global counter\n    for i in (1, 2, 3):\n        counter += 1\ndoLotsOfStuff() \nprint(counter)","选项F":"","选项E":"","选项D":"4","答案":"D","选项C":"3","选项B":"2","选项A":"1","类型":"1-单选"},{"题干":"在Python中，执行下列语句后的显示结果是什么? \ndef f(): pass\nprint(type(f()))","选项F":"","选项E":"","选项D":"<class 'set'>","答案":"B","选项C":"<class 'complex'>","选项B":"<class 'NoneType'>","选项A":"<class 'list'>","类型":"1-单选"},{"题干":"表达式 'abcab'.replace('a','d')的值为","选项F":"","选项E":"","选项D":"adad","答案":"A","选项C":"dabcdab","选项B":"adbcadb","选项A":"dbcdb","类型":"1-单选"},{"题干":"表达式[float(i) for i in range(3)]的值为","选项F":"","选项E":"","选项D":"['0', '1', '2','3']","答案":"B","选项C":"[0,1,2,3]","选项B":"[0.0, 1.0, 2.0]","选项A":"['0', '1', '2']","类型":"1-单选"},{"题干":"在python中，阅读下列程序，输出结果正确的是：\nnums = set([1,3,3,3,4]) \nprint( len(nums))","选项F":"","选项E":"","选项D":"5","答案":"C","选项C":"3","选项B":"2","选项A":"1","类型":"1-单选"},{"题干":"在Python3中，执行表达式{1,2,3,4}-{3,4,5,6}后，所得的值为","选项F":"","选项E":"","选项D":"{-8}","答案":"A","选项C":"typeError","选项B":"{-2,-2,-2,-2}","选项A":"{1, 2}","类型":"1-单选"},{"题干":"已知 a = [1,2,3,4,5,6]，那么执行语句 a[-2::-2]之后，a的值为","选项F":"","选项E":"","选项D":"[4,3]","答案":"A","选项C":"[5,4,3,2,1]","选项B":"[5,4,3]","选项A":"[5,3,1]","类型":"1-单选"},{"题干":"Python3中可以使用什么语句来处理异常","选项F":"","选项E":"","选项D":"try...but","答案":"A","选项C":"try..elif","选项B":"try..exception","选项A":"try..except","类型":"1-单选"},{"题干":"在python中，阅读下列程序，输出结果正确的是：\na=int(16**0.5)\nb=int(2**2)\nprint('a==b')","选项F":"","选项E":"","选项D":"False","答案":"A","选项C":"None","选项B":"True","选项A":"a==b","类型":"1-单选"},{"题干":"在python3中，执行下列语句：\na = '1,2,3,4,5,6'\nla=a.split(',')\n则la的数据类型是","选项F":"","选项E":"","选项D":"array","答案":"A","选项C":"dict","选项B":"str","选项A":"list","类型":"1-单选"},{"题干":"Python文件的读写里，有一些常用的打开模式，其中只能写，并从文件底部添加内容的是","选项F":"","选项E":"","选项D":"rb","答案":"A","选项C":"w","选项B":"r","选项A":"a","类型":"1-单选"},{"题干":"表达式5 if 5>6 else (6 if 3>2 else 5)\u00A0的值为","选项F":"","选项E":"","选项D":"Ture","答案":"B","选项C":"5","选项B":"6","选项A":"无正确选项","类型":"1-单选"},{"题干":"thread模块提供了基本的______和______的支持","选项F":"","选项E":"","选项D":"指针","答案":"AB","选项C":"进程","选项B":"锁","选项A":"线程","类型":"2-多选"},{"题干":"Thread 类支持使用两种方法来创建线程，其中一种是，继承threading.Thread类创建派生类，并重写________方法的和__________方法来实现自定义对象类。","选项F":"","选项E":"","选项D":"setName","答案":"AB","选项C":"start()","选项B":"run()","选项A":"__init__","类型":"2-多选"},{"题干":"关于矩阵以下说法正确的是","选项F":"","选项E":"","选项D":"对角线元素均为1，其余元素均为0的矩阵称为单位矩阵","答案":"ACD","选项C":"所有矩阵都有转置矩阵","选项B":"所有矩阵都有逆矩阵","选项A":"当n=m时，矩阵A称为n阶方阵","类型":"2-多选"},{"题干":"thread模块需要哪两个基础的支持","选项F":"","选项E":"","选项D":"指针","答案":"AB","选项C":"进程","选项B":"锁","选项A":"线程","类型":"2-多选"},{"题干":"在本月学习中，Thread 类支持使用两种方法来创建线程，其中一种是，继承threading.Thread类创建派生类，并重写________方法的和__________方法来实现自定义对象类。","选项F":"","选项E":"","选项D":"setName","答案":"AB","选项C":"start()","选项B":"run()","选项A":"__init__","类型":"2-多选"},{"题干":"多线程类似于同时执行多个不同程序，多线程运行优点描述正确的为","选项F":"","选项E":"","选项D":"线程在执行过程与进程执行过程一样","答案":"AB","选项C":"使用多线程后运行速度一定变快","选项B":"程序的运行速度可能加快","选项A":"使用线程可以把占据长时间的程序中的任务放到后台去处理","类型":"2-多选"},{"题干":"关于线程与进程描述正确的为","选项F":"","选项E":"","选项D":"使用多个进程的优势在于每个进程都是独立运行的","答案":"ACD","选项C":"线程不能够独立执行，必须依存在应用程序中，由应用程序提供多个线程执行控制","选项B":"线程在执行过程中与进程没有区别的","选项A":"使用线程可以把占据长时间的程序中的任务放到后台去处理","类型":"2-多选"},{"题干":"有关矩阵以下说法正确的是","选项F":"","选项E":"","选项D":"对角线元素均为1，其余元素均为0的矩阵称为单位矩阵","答案":"ACD","选项C":"所有矩阵都有转置矩阵","选项B":"所有矩阵都有逆矩阵","选项A":"当n=m时，矩阵A称为n阶方阵","类型":"2-多选"},{"题干":"面向对象的三大特性","选项F":"","选项E":"","选项D":"多态","答案":"ABD","选项C":"重写","选项B":"继承","选项A":"封装","类型":"2-多选"},{"题干":"在python中，关于类的描述正确的是","选项F":"","选项E":"","选项D":"类的抽象可以将类的实现和类的使用分离开来","答案":"ABCD","选项C":"初始化程序以__init__命名","选项B":"对象是类的一个实例","选项A":"类定义了对象的属性，并提供了用于初始化对象的初始化程序和操作这些属性的方法","类型":"2-多选"},{"题干":"在python中，关于元组描述正确的是","选项F":"","选项E":"","选项D":"一个元组是一个字典","答案":"BC","选项C":"由于元组是一个序列，所以序列的切片操作可以用于元组","选项B":"不能对元组中的元素进行添加、删除或替换","选项A":"一个元组是一个列表","类型":"2-多选"},{"题干":"下列说法正确的是","选项F":"","选项E":"","选项D":"类的私有属性不能在类的外部被使用或直接访问","答案":"ABCD","选项C":"python中，子类可以重写父类的方法","选项B":"对象是类的实例","选项A":"类变量在整个实例化的对象中是公用的","类型":"2-多选"},{"题干":"在python中，下列方法对应正确的是","选项F":"","选项E":"","选项D":"@staticmethod标记的方法为静态方法","答案":"ABCD","选项C":"@classmethod标记的方法为类方法","选项B":"__del__:析构函数","选项A":"__init__:构造函数","类型":"2-多选"},{"题干":"设A和B是任两个n*m的矩阵，则B+A=A+B","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"两个n乘m矩阵的和是一个m乘n矩阵","选项F":"","选项E":"","选项D":"","答案":"B","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"threading 模块提供了Thread,Lock,Rlock,Ccondition,Event,Timer和Semaphore等大量类来支持多线程编程。","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"threading 模块中threading.current_thread()方法是返回当前Thread对象","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"设A和B是任两个n*m的矩阵，那么B+A=A+B","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"Python支持单继承同时也支持多继承","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"两个n乘m矩阵的和等于一个m乘n矩阵","选项F":"","选项E":"","选项D":"","答案":"B","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"在Python中，__init__方法是内置的初始化函数。","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"Python列表中所有元素必须为相同类型的数据。","选项F":"","选项E":"","选项D":"","答案":"B","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"Python字典中的“键”可以是元组","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"在Python中，执行下列语句后t= (1,2,3) ，print(type(t))的显示结果是<class 'list'>","选项F":"","选项E":"","选项D":"","答案":"B","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"Python集合可以包含相同的元素。","选项F":"","选项E":"","选项D":"","答案":"B","选项C":"","选项B":"","选项A":"","类型":"0-判断"}]