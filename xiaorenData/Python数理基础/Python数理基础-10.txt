[{"题干":"Python3中可以使用什么语句来处理异常","选项F":"","选项E":"","选项D":"try","答案":"A","选项C":"try..else","选项B":"try..exceptioin","选项A":"try..except","类型":"1-单选"},{"题干":"表达式 'Hello world!'.count('l') 的值为","选项F":"","选项E":"","选项D":"1","答案":"A","选项C":"2","选项B":"4","选项A":"3","类型":"1-单选"},{"题干":"使用上下文管理关键字_________可以自动管理文件对象，不论何种原因结束该关键字中的语句块，都能保证文件被正确关闭","选项F":"","选项E":"","选项D":"seek","答案":"A","选项C":"tell","选项B":"read","选项A":"with","类型":"1-单选"},{"题干":"Python内置函数_____________用来返回文件下一行.","选项F":"","选项E":"","选项D":"read()","答案":"B","选项C":"star()","选项B":"next()","选项A":"flush()","类型":"1-单选"},{"题干":"对文件进行写入操作之后，_______________方法用来在不关闭文件对象的情况下将缓冲区内容写入文件","选项F":"","选项E":"","选项D":"read()","答案":"A","选项C":"next()","选项B":"isatty()","选项A":"flush()","类型":"1-单选"},{"题干":"异常用什么语句处理","选项F":"","选项E":"","选项D":"try","答案":"A","选项C":"try..else","选项B":"try..exceptioin","选项A":"try..except","类型":"1-单选"},{"题干":"Hello world!'.count('l') 的结果为","选项F":"","选项E":"","选项D":"1","答案":"A","选项C":"2","选项B":"4","选项A":"3","类型":"1-单选"},{"题干":"内置函数中用来打开或创建文件并返回文件对象是:__","选项F":"","选项E":"","选项D":"star()","答案":"C","选项C":"open()","选项B":"turn()","选项A":"take()","类型":"1-单选"},{"题干":"哪个错误属于下标索引超出序列边界","选项F":"","选项E":"","选项D":"SyntaxError","答案":"B","选项C":"TypeError","选项B":"IndexErro","选项A":"IndentationError","类型":"1-单选"},{"题干":"哪个错误属于语法出错","选项F":"","选项E":"","选项D":"SyntaxError","答案":"D","选项C":"TypeError","选项B":"IndexErro","选项A":"IndentationError","类型":"1-单选"},{"题干":"使用上下文管理哪个关键字，可以自动管理文件对象，不论何种原因结束该关键字中的语句块，都能保证文件被正确关闭","选项F":"","选项E":"","选项D":"seek","答案":"A","选项C":"tell","选项B":"read","选项A":"with","类型":"1-单选"},{"题干":"内置函数_____________用来返回文件下一行.","选项F":"","选项E":"","选项D":"read()","答案":"B","选项C":"star()","选项B":"next()","选项A":"flush()","类型":"1-单选"},{"题干":"对文件进行写入操作之后，哪个方法用来在不关闭文件对象的情况下将缓冲区内容写入文件","选项F":"","选项E":"","选项D":"read()","答案":"A","选项C":"next()","选项B":"isatty()","选项A":"flush()","类型":"1-单选"},{"题干":"已知 x = {1, 2, 3}，那么执行语句 x.add(3) 之后，x的值为__________。","选项F":"","选项E":"","选项D":"{1,2}","答案":"C","选项C":"{1,2,3}","选项B":"None","选项A":"{1,2,3,3}","类型":"1-单选"},{"题干":"Python中，是正则表达式的模块是","选项F":"","选项E":"","选项D":"search","答案":"C","选项C":"re","选项B":"ze","选项A":"del","类型":"1-单选"},{"题干":"python3中，表达式表达式 sorted([111, 2, 33], key=lambda x: len(str(x)))的值为","选项F":"","选项E":"","选项D":"[33]","答案":"C","选项C":"[2, 33, 111]","选项B":"[2]","选项A":"[111, 33, 2]","类型":"1-单选"},{"题干":"执行下列语句后的显示结果是什么? \ncounter = 1\ndef doLotsOfStuff(): \n    global counter\n    for i in (1, 2, 3):\n        counter += 1\ndoLotsOfStuff() \nprint(counter)","选项F":"","选项E":"","选项D":"4","答案":"D","选项C":"3","选项B":"2","选项A":"1","类型":"1-单选"},{"题干":"Threading中的______是启动线程","选项F":"","选项E":"","选项D":"release()","答案":"B","选项C":"acquire()","选项B":"star()","选项A":"open()","类型":"1-单选"},{"题干":"在python中，使用上下文管理关键字______________可以自动管理文件对象，不论何种原因结束该关键字中的语句块，都能保证文件被正确关闭","选项F":"","选项E":"","选项D":"file open","答案":"A","选项C":"close","选项B":"open","选项A":"with open","类型":"1-单选"},{"题干":"已知a= 'Hello world!'.count('l'),则a的值为___________","选项F":"","选项E":"","选项D":"2","答案":"B","选项C":"12","选项B":"3","选项A":"5","类型":"1-单选"},{"题干":"已知 x = 'abcdefg'，则表达式 x[3:] + x[:3] 的值为________","选项F":"","选项E":"","选项D":"efgabcd","答案":"A","选项C":"cdefgab","选项B":"defabc","选项A":"defgabc","类型":"1-单选"},{"题干":"在python中，表达式 len('SDIBT') 的值为","选项F":"","选项E":"","选项D":"5","答案":"D","选项C":"3","选项B":"2","选项A":"1","类型":"1-单选"},{"题干":"执行表达式{1,2,3,4}-{3,4,5,6}后，所得的值是","选项F":"","选项E":"","选项D":"{-8}","答案":"A","选项C":"typeError","选项B":"{-2,-2,-2,-2}","选项A":"{1, 2}","类型":"1-单选"},{"题干":"在python中，已知 a = [1,2,3,4,5,6]，那么执行语句 a[-2::-2]之后，a的值为","选项F":"","选项E":"","选项D":"[4,3]","答案":"A","选项C":"[5,4,3,2,1]","选项B":"[5,4,3]","选项A":"[5,3,1]","类型":"1-单选"},{"题干":"Python3中，一般可以使用什么语句来对异常进行处理","选项F":"","选项E":"","选项D":"try...but","答案":"A","选项C":"try..elif","选项B":"try..exception","选项A":"try..except","类型":"1-单选"},{"题干":"已知a=int(16**0.5)，b=int(2**2)，则表达式a==b的值是","选项F":"","选项E":"","选项D":"False","答案":"B","选项C":"None","选项B":"True","选项A":"a==b","类型":"1-单选"},{"题干":"执行下列语句：\na = '1,2,3,4,5,6'\nla=a.split(',')\n则la的数据类型是","选项F":"","选项E":"","选项D":"array","答案":"A","选项C":"dict","选项B":"str","选项A":"list","类型":"1-单选"},{"题干":"已知a=14，则表达式a>>2的结果为","选项F":"","选项E":"","选项D":"14","答案":"B","选项C":"-7","选项B":"3","选项A":"-2","类型":"1-单选"},{"题干":"在python中，阅读下列程序，输出结果正确的是：\nimport re\nprint(re.search('www', 'www.runoob.com').span())","选项F":"","选项E":"","选项D":"（0,4）","答案":"A","选项C":"（1,3）","选项B":"（0,2）","选项A":"（0,3）","类型":"1-单选"},{"题干":"Python文件的读写里，有一些常用的打开模式，其中只能写内容的是","选项F":"","选项E":"","选项D":"rb","答案":"A","选项C":"r+","选项B":"r","选项A":"w","类型":"1-单选"},{"题干":"已知表达式5 if 5>6 else (6 if 3>2 else 5)\u00A0的值为","选项F":"","选项E":"","选项D":"Ture","答案":"B","选项C":"5","选项B":"6","选项A":"无正确选项","类型":"1-单选"},{"题干":"已知，内置函数_________用来返回序列中的最大元素","选项F":"","选项E":"","选项D":"len()","答案":"B","选项C":"huge()","选项B":"max()","选项A":"big()","类型":"1-单选"},{"题干":"Python3中异常用什么语句处理","选项F":"","选项E":"","选项D":"try","答案":"A","选项C":"try..else","选项B":"try..exceptioin","选项A":"try..except","类型":"1-单选"},{"题干":"在python开发环境中，表达式 'Hello world!'.count('l') 的值为","选项F":"","选项E":"","选项D":"1","答案":"A","选项C":"2","选项B":"4","选项A":"3","类型":"1-单选"},{"题干":"在python3开发环境中，内置函数_____________用来打开或创建文件并返回文件对象。","选项F":"","选项E":"","选项D":"star()","答案":"C","选项C":"open()","选项B":"turn()","选项A":"take()","类型":"1-单选"},{"题干":"在python开发环境中，下列哪个错误属于下标索引超出序列边界","选项F":"","选项E":"","选项D":"SyntaxError","答案":"B","选项C":"TypeError","选项B":"IndexErro","选项A":"IndentationError","类型":"1-单选"},{"题干":"在python开发环境中，下列哪个错误属于语法出错","选项F":"","选项E":"","选项D":"SyntaxError","答案":"D","选项C":"TypeError","选项B":"IndexErro","选项A":"IndentationError","类型":"1-单选"},{"题干":"在python开发环境中，使用上下文管理关键字_________可以自动管理文件对象，不论何种原因结束该关键字中的语句块，都能保证文件被正确关闭","选项F":"","选项E":"","选项D":"seek","答案":"A","选项C":"tell","选项B":"read","选项A":"with","类型":"1-单选"},{"题干":"Python3内置函数_____________用来返回文件下一行.","选项F":"","选项E":"","选项D":"read()","答案":"B","选项C":"star()","选项B":"next()","选项A":"flush()","类型":"1-单选"},{"题干":"在python开发环境中，对文件进行写入操作之后，_______________方法用来在不关闭文件对象的情况下将缓冲区内容写入文件","选项F":"","选项E":"","选项D":"read()","答案":"A","选项C":"next()","选项B":"isatty()","选项A":"flush()","类型":"1-单选"},{"题干":"关于Python内存管理，下列说法正确的是","选项F":"","选项E":"","选项D":"可以使用del释放资源","答案":"BCD","选项C":"变量无需指定类型","选项B":"变量不必事先声明","选项A":"变量无需先创建和赋值而直接使用","类型":"2-多选"},{"题干":"在python中，将处理载荷分布到多台处理器上，以便充分利用所有可用的处理器资源，可以对工作载荷进行分布的方法包括","选项F":"","选项E":"","选项D":"继承","答案":"AC","选项C":"多线程","选项B":"封装","选项A":"多进程","类型":"2-多选"},{"题干":"在python3面向对象程序设计中，从一个非常简单的类Point开始，该类存放坐标（x,y），关于其属性和方法描述正确的是","选项F":"","选项E":"","选项D":"内置的repr()函数会对给定的对象调用__repr__()特殊方法，并返回相应结果","答案":"ABCD","选项C":"内置的isinstance()函数以一个对象与一个类为参数，若该对象属于给定的类或属于给定类的基类，其值返回为Ture","选项B":"Point类有两个数据属性，self.x和self.y","选项A":"在没有指定基类的情况下，Point是object的直接子类，等价于point(object)","类型":"2-多选"},{"题干":"在python中，创建线程的两种方法是","选项F":"","选项E":"","选项D":"创建threading.Thread类的子类","答案":"BD","选项C":"调用start()方法","选项B":"调用threading.Thread()并向其传递一个可调用的对象","选项A":"调用基类","类型":"2-多选"},{"题干":"Python3内存管理，下列说法正确的是","选项F":"","选项E":"","选项D":"可以使用del释放资源","答案":"BCD","选项C":"变量无需指定类型","选项B":"变量不必事先声明","选项A":"变量无需先创建和赋值而直接使用","类型":"2-多选"},{"题干":"为了将处理载荷分布到多台处理器上，以便充分利用所有可用的处理器资源，可以对工作载荷进行分布的方法包括","选项F":"","选项E":"","选项D":"继承","答案":"AC","选项C":"多线程","选项B":"封装","选项A":"多进程","类型":"2-多选"},{"题干":"在面向对象程序设计中，从一个非常简单的类Point开始，该类存放坐标（x,y），关于其属性和方法描述正确的是","选项F":"","选项E":"","选项D":"内置的repr()函数会对给定的对象调用__repr__()特殊方法，并返回相应结果","答案":"ABCD","选项C":"内置的isinstance()函数以一个对象与一个类为参数，若该对象属于给定的类或属于给定类的基类，其值返回为Ture","选项B":"Point类有两个数据属性，self.x和self.y","选项A":"在没有指定基类的情况下，Point是object的直接子类，等价于point(object)","类型":"2-多选"},{"题干":"在python学习中，创建线程的两种方法是","选项F":"","选项E":"","选项D":"创建threading.Thread类的子类","答案":"BD","选项C":"调用start()方法","选项B":"调用threading.Thread()并向其传递一个可调用的对象","选项A":"调用基类","类型":"2-多选"},{"题干":"在python3学习中，类共有三类方法","选项F":"","选项E":"","选项D":"类方法","答案":"BCD","选项C":"静态方法","选项B":"普通方法","选项A":"万能方法","类型":"2-多选"},{"题干":"面向对象的思想已经涉及到软件开发的各个方面，其三大特性分别是","选项F":"","选项E":"","选项D":"多态","答案":"ABD","选项C":"重写","选项B":"继承","选项A":"封装","类型":"2-多选"},{"题干":"下列关于Python语言，说法正确的是","选项F":"","选项E":"","选项D":"支持内存的自动管理","答案":"ABD","选项C":"是汇编语言","选项B":"是一种解释性语言","选项A":"支持面向对象的编程","类型":"2-多选"},{"题干":"以下关于面向对象描述正确的是","选项F":"","选项E":"","选项D":"类的抽象可以将类的实现和类的使用分离开来","答案":"ABCD","选项C":"初始化程序以__init__命名","选项B":"对象是类的一个实例","选项A":"类定义了对象的属性，并提供了用于初始化对象的初始化程序和操作这些属性的方法","类型":"2-多选"},{"题干":"下列关于元组，描述正确的有","选项F":"","选项E":"","选项D":"一个元组等同于一个字典","答案":"BC","选项C":"由于元组是一个序列，所以序列的切片操作可以用于元组","选项B":"不能对元组中的元素进行添加、删除或替换","选项A":"一个元组等同于一个列表","类型":"2-多选"},{"题干":"python中，类一般有三类方法，他们分别是","选项F":"","选项E":"","选项D":"类方法","答案":"BCD","选项C":"静态方法","选项B":"普通方法","选项A":"万能方法","类型":"2-多选"},{"题干":"面向对象是一种基于面向过程的新的编程思想，则下列说法正确的是","选项F":"","选项E":"","选项D":"类的私有属性不能在类的外部被使用或直接访问","答案":"ABCD","选项C":"python中，子类可以重写父类的方法","选项B":"对象是类的实例","选项A":"类变量在整个实例化的对象中是公用的","类型":"2-多选"},{"题干":"关于python中，继承与多态描述正确的是","选项F":"","选项E":"","选项D":"类之间常见的关系是关联、聚合、组合和继承","答案":"ABCD","选项C":"多态意味着一个子类对象可以传递给一个需要父类类型的参数","选项B":"可以使用isinstance函数测试一个对象是否是一个类的实例","选项A":"类的继承可以从现有的类派生出新类","类型":"2-多选"},{"题干":"关于面向对象类方法，以下说法正确的有","选项F":"","选项E":"","选项D":"__cmp__:\u00A0比较运算","答案":"ABCD","选项C":"__del__:\u00A0析构函数，释放对象时使用","选项B":"__len__:\u00A0获得长度","选项A":"__init__:初始化函数","类型":"2-多选"},{"题干":"面向对象(OOP)是软件开发方法，此编程方式的实现是基于对____和_____的使用","选项F":"","选项E":"","选项D":"数组","答案":"AB","选项C":"集合","选项B":"对象","选项A":"类","类型":"2-多选"},{"题干":"关于面向对象，下列说法正确的有","选项F":"","选项E":"","选项D":"@staticmethod标记的方法为静态方法","答案":"CD","选项C":"@classmethod标记的方法为类方法","选项B":"__del__:构造函数","选项A":"__init__:析构函数","类型":"2-多选"},{"题干":"关于Python3内存管理，下列说法正确的是","选项F":"","选项E":"","选项D":"可以使用del释放资源","答案":"BCD","选项C":"变量无需指定类型","选项B":"变量不必事先声明","选项A":"变量无需先创建和赋值而直接使用","类型":"2-多选"},{"题干":"将处理载荷分布到多台处理器上，以便充分利用所有可用的处理器资源，可以对工作载荷进行分布的方法包括","选项F":"","选项E":"","选项D":"继承","答案":"AC","选项C":"多线程","选项B":"封装","选项A":"多进程","类型":"2-多选"},{"题干":"在面向对象程序设计python3中，从一个非常简单的类Point开始，该类存放坐标（x,y），关于其属性和方法描述正确的是","选项F":"","选项E":"","选项D":"内置的repr()函数会对给定的对象调用__repr__()特殊方法，并返回相应结果","答案":"ABCD","选项C":"内置的isinstance()函数以一个对象与一个类为参数，若该对象属于给定的类或属于给定类的基类，其值返回为Ture","选项B":"Point类有两个数据属性，self.x和self.y","选项A":"在没有指定基类的情况下，Point是object的直接子类，等价于point(object)","类型":"2-多选"},{"题干":"创建线程的两种方法是","选项F":"","选项E":"","选项D":"创建threading.Thread类的子类","答案":"BD","选项C":"调用start()方法","选项B":"调用threading.Thread()并向其传递一个可调用的对象","选项A":"调用基类","类型":"2-多选"},{"题干":"python3中类共有三类方法","选项F":"","选项E":"","选项D":"类方法","答案":"BCD","选项C":"静态方法","选项B":"普通方法","选项A":"万能方法","类型":"2-多选"},{"题干":"多任务可以由多进程完成，也可以由一个进程内的多线程完成","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"Python中,file 对象使用 open 函数来创建","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"Python的OS模块中，os.close()是用来打开文件描述符","选项F":"","选项E":"","选项D":"","答案":"B","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"在Python中，执行下列语句后foo = (3, 4, 5) ，print(type(foo))的显示结果是<class 'tuple'>","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"Python中，内置的repr()函数会对给定的对象调用__repr__()特殊方法，并返回相应结果","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"在python3学习中，多任务可以由多进程完成，也可以由一个进程内的多线程完成","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"在python3学习中，file 对象使用 open 函数来创建","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"在python3学习中，OS模块中，os.close()是用来打开文件描述符","选项F":"","选项E":"","选项D":"","答案":"B","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"在Python中，__del__方法是内置的初始化函数。","选项F":"","选项E":"","选项D":"","答案":"B","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"已知表达式 set([1,2,3,4]) == {1,2,3,4}，则他的值为False","选项F":"","选项E":"","选项D":"","答案":"B","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"在Python中，字典的“键”不可以是元组","选项F":"","选项E":"","选项D":"","答案":"B","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"在Python中，执行下列语句后t= (1,2,3) ，print(type(t))的显示结果是<class 'tuple'>","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"在Python中，如果你的父类方法的功能不能满足需求，可以在子类重写你父类的方法","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"在python开发环境中，多任务可以由多进程完成，也可以由一个进程内的多线程完成","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"file 对象使用 open 函数来创建","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"在python开发环境中，OS模块中的 os.close()是用来打开文件描述符","选项F":"","选项E":"","选项D":"","答案":"B","选项C":"","选项B":"","选项A":"","类型":"0-判断"}]