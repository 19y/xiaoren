{"data":[{"题干":"下面是SpringCloudConfig的描述信息，说法正确的是","选项D":"SpringCloudConfig不支持svn存储配置信息","知识点":"缺省知识点","答案":"A","选项C":"SpringCloudConfig支持redis存储配置信息","选项B":"SpringCloudConfig是依赖注册中心的","选项A":"SpringCloudConfig是一个集中化外部配置的分布式系统，由客户端和服务端组成","类型":"1-单选"},{"题干":"关于@EnableConfigServer注解的描述正确的是","选项D":"@EnableConfigServer表示启动微服务","知识点":"缺省知识点","答案":"A","选项C":"@EnableConfigServer表示开启网关的功能","选项B":"@EnableConfigServer表示开启负载均衡功能","选项A":"@EnableConfigServer表示开启配置中心功能","类型":"1-单选"},{"题干":"下列关于服务降级的说法正确的是","选项D":"服务降级是用来处理高并发的一种有效办法","知识点":"缺省知识点","答案":"A","选项C":"服务降级是用来处理多线程的一种手段","选项B":"服务降级就是降低一下服务的响应时间要求，允许被降级的服务在更长的时间内被访问到","选项A":"服务降级，一般是从整体负荷考虑。就是当某个服务熔断之后，服务器将不再被调用，此时客户端可以自己准备一个本地的fallback回调，返回一个缺省值。这样做，虽然水平下降，但好歹可用，比直接挂掉强","类型":"1-单选"},{"题干":"下列是关于Spring的IOC特性的描述错误的是","选项D":"当使用Spring的IoC容器时只需指出组件需要的对象，在运行时Spring的IoC容器会根据XML配置数据提供给它","知识点":"缺省知识点","答案":"A","选项C":"所谓\u201C控制反转\u201D,是指控制权由应用代码转到外部容器，控制权的转移， ","选项B":"IoC将控制创建的职责搬进了框架中；并把它从应用代码脱离开来","选项A":"IoC就是指程序之间的关系由程序代码直接操控。 ","类型":"1-单选"},{"题干":"对于JDK动态代理和CGLIB动态代理下列说的错误的是","选项D":"CGLIB动态代理可以对所有的类进行代理","知识点":"缺省知识点","答案":"D","选项C":"当没有实现接口的类需要代理时就需要通过 CGLIB 来实现代理了，他的原理是对指定的目标类生成一个子类，并覆盖其中方法实现增强","选项B":"不实现接口的类就不能使用 JDK 的动态代理 CGLIB 是针对类来实现代理","选项A":"JDK 的动态代理只能对实现了接口的目标类进行代理","类型":"1-单选"},{"题干":"下列不属于AOP核心的内容的是","选项D":"Filter（过滤）","知识点":"缺省知识点","答案":"D","选项C":"Pointcut（切入点）","选项B":"Joinpoint（连接点）","选项A":"Aspect（切面）","类型":"1-单选"},{"题干":"下列不属于Spring的通知的种类的是","选项D":"Error通知","知识点":"缺省知识点","答案":"D","选项C":"Throws通知","选项B":"After\u2002return通知","选项A":"Before通知","类型":"1-单选"},{"题干":"下面选项是Spring中Bean的作用域，其中不属于Spring中Bean的作用域的是","选项D":"application","知识点":"缺省知识点","答案":"D","选项C":"session","选项B":"prototype","选项A":"singleton ","类型":"1-单选"},{"题干":"下列关于Spring中常用的注解的描述错误的是","选项D":"@Component 注解用于标注数据访问层，也可以说用于标注数据访问组件","知识点":"缺省知识点","答案":"D","选项C":"@Qualifier 注解当有多个相同类型的bean却只有一个需要自动装配时，将@Qualifier 注解和@Autowire 注解结合使用以消除这种混淆，指定需要装配的确切的bean。","选项B":"@Autowired 注解提供了更细粒度的控制，包括在何处以及如何完成自动装配。它的用法和@Required一样，修饰setter方法、构造器、属性或者具有任意名称和\/或多个参数的PN方法。","选项A":"@Required  注解表明bean的属性必须在配置的时候设置，通过一个bean定义的显式的属性值或通过自动装配，若@Required注解的bean属性未被设置，容器将抛出BeanInitializationException。","类型":"1-单选"},{"题干":"下列的选项中不属于Spring的核心模块的是","选项D":"Spring 事务","知识点":"缺省知识点","答案":"D","选项C":"SpEL (Spring Expression Language)","选项B":"Spring Bean","选项A":"Spring Core","类型":"1-单选"},{"题干":"下列选项是对SpringIOC的好处的描述，其中错误的是","选项D":"让程序员开发上层代码的时候变的略微复杂了","知识点":"缺省知识点","答案":"D","选项C":"它支持即时的实例化和延迟加载服务","选项B":"它以最小的影响和最少的侵入机制促进松耦合","选项A":"它将最小化应用程序中的代码量","类型":"1-单选"},{"题干":"下列关于LinkedList和Vector的描述错误的是","选项D":"LinkedList底层的实现是双向链表","知识点":"缺省知识点","答案":"C","选项C":"Vector在效率层面上要高于ArrayList","选项B":"Vector是线程同步的","选项A":"LinkedList增删块","类型":"1-单选"},{"题干":"下面的理论表述错误的是","选项D":"HashMap可以存储null值和null键","知识点":"缺省知识点","答案":"B","选项C":"ArrayList是线程不安全的，Vector是线程安全的","选项B":"使用泛型必须进行强制类型转换","选项A":"Collections是针对Collection集合操作的工具类","类型":"1-单选"},{"题干":"哪种Key-Value存储对象，既能保证线程的同步，又具有高效的并发性能","选项D":"ConcurrentHashMap","知识点":"缺省知识点","答案":"D","选项C":"Vector","选项B":"Hashtable","选项A":"HashMap","类型":"1-单选"},{"题干":"下列关于反射方法public T newInstance()说法准确的是：","选项D":"创建此 Class 对象所表示的类的一个新的属性。","知识点":"缺省知识点","答案":"B","选项C":"返回此 Class 对象表示的类声明的公共构造方法。","选项B":"创建此 Class 对象所表示的类的一个新实例。","选项A":"返回此 Class 对象表示的类声明的所有构造方法。","类型":"1-单选"},{"题干":"如果要编写一个线程类需要继承的父类是","选项D":"Thread","知识点":"缺省知识点","答案":"D","选项C":"Runable","选项B":"Runnable","选项A":"Object","类型":"1-单选"},{"题干":"对于synchronized关键字下列的说法正确的是","选项D":"synchronized标记的代码块只会运行一次","知识点":"缺省知识点","答案":"A","选项C":"允许两个或更多处理线程同时开始和结束； ","选项B":"允许两线程并行运行，而且互相通信； ","选项A":"保证在同一个虚拟机实例中某时刻只有一个线程可访问方法或对象； ","类型":"1-单选"},{"题干":"Java中的集合类包括ArrayList、LinkedList、HashMap等类，下列关于集合类描述错误的是","选项D":"添加和删除元素时，ArrayList的表现更佳","知识点":"缺省知识点","答案":"D","选项C":"HashMap实现Map接口，它允许任何类型的键和值对象，并允许将null用作键或值","选项B":"ArrayList和LinkedList均实现了List接口","选项A":"ArrayList的查询速度比LinkedList快","类型":"1-单选"},{"题干":"下列是关于线程的一些说法其中错误的是","选项D":"join方法,可使当前线程阻塞，直到thread线程运行结束","知识点":"缺省知识点","答案":"B","选项C":"如果复用一个线程，可以调用再次调用start方法，使已经结束的线程复活。","选项B":"一旦一个线程被创建，它就立即开始运行。","选项A":"使用start()方法可以使一个线程成为可运行的，但是它不一定立即开始运行。","类型":"1-单选"},{"题干":"下列关于File类的说法不准确的是","选项D":"可以使用File 对象创建和删除一个文件夹","知识点":"缺省知识点","答案":"C","选项C":"当一个File 对象被垃圾回收时，系统上对应的文件或文件夹也被删除","选项B":"可以使用File 对象创建和删除一个文件","选项A":"一个File 对象代表了操作系统中的一个文件或者文件夹","类型":"1-单选"},{"题干":"下面是SpringCloudConfig的描述信息错误的是","选项D":"SpringCloudConfig不支持svn存储配置信息","知识点":"缺省知识点","答案":"ACD","选项C":"SpringCloudConfig支持redis存储配置信息","选项B":"SpringCloudConfig是一个集中化外部配置的分布式系统，由客户端和服务端组成","选项A":"SpringCloudConfig是依赖注册中心的","类型":"2-多选"},{"题干":"下面可以用来作为SpringCloudConfig配置中心存储配置信息的是","选项D":"MongoDB","知识点":"缺省知识点","答案":"ABCD","选项C":"mysql","选项B":"git","选项A":"svn","类型":"2-多选"},{"题干":"下列是Ribbon和Fegin的区别说法正确的是","选项D":"Ribbon和Fegin都是用来处理高并发的","知识点":"缺省知识点","答案":"ABC","选项C":"调用方式不同，Ribbon需要自己构建http请求，模拟http请求然后使用RestTemplate发送给其他服务，步骤相当繁琐。 Feign则是在Ribbon的基础上进行了一次改进，采用接口的方式，将需要调用的其他服务的方法定义成抽象方法即可","选项B":"服务的指定位置不同，Ribbon是在@RibbonClient注解上声明，Feign则是在定义抽象方法的接口中使用@FeignClient声明。","选项A":"启动类使用的注解不同，Ribbon用的是@RibbonClient，Feign用的是@EnableFeignClients","类型":"2-多选"},{"题干":"下列属于微服务技术栈的是","选项D":"负载均衡","知识点":"缺省知识点","答案":"ABCD","选项C":"服务配置中心","选项B":"服务熔断器","选项A":"服务注册与发现","类型":"2-多选"},{"题干":"下列选项是关于SpringBoot的优点描述，正确的是","选项D":"利于应用监控","知识点":"缺省知识点","答案":"ABCD","选项C":"自动配置","选项B":"简化配置","选项A":"独立运行","类型":"2-多选"},{"题干":"下列属于SpringBoot的配置风格的是","选项D":".sh","知识点":"缺省知识点","答案":"AB","选项C":".xml","选项B":".yml","选项A":".properties","类型":"2-多选"},{"题干":"下列属于分布式服务的缺点的是","选项D":"系统集成测试复杂","知识点":"缺省知识点","答案":"ABCD","选项C":"数据一致性处理","选项B":"服务间通信成本","选项A":"开发人员要处理分布式系统的复杂性","类型":"2-多选"},{"题干":"下列的注解描述正确的是","选项D":"@Configuration 表示这个类中定义了Bean，会把这个类中bean加载到spring容器中","知识点":"缺省知识点","答案":"ABCD","选项C":"@ComponentScan 如果不设置basePackage的话 默认会扫描包的所有类","选项B":"@HystrixCommand(fallbackMethod=\u201DXXX\u201D)：声明一个失败回滚处理函数XXX，当被注解的方法执行超时（默认是1000毫秒），就会执行fallback函数，返回错误提示。","选项A":"@EnableHystrix：开启熔断 ","类型":"2-多选"},{"题干":"下列是关于SpringBoot和SpringCloud的说法正确的是","选项D":"SpringBoot专注于快速,方便的开发单个的微服务个体,SpringCloud关注全局的服务治理框架","知识点":"缺省知识点","答案":"ABD","选项C":"SpringBoot依赖于SpringCloud,SpringCloud依赖于SpringBoot,属于互相依赖关系","选项B":"SpringCloud是关注全局的微服务协调整理治理框架,整合并管理各个微服务,为各个微服务之间提供,配置管理,服务发现,断路器,路由,事件总线等集成服务","选项A":"SpringBoot专注于快速方便的开发单个个体的微服务","类型":"2-多选"},{"题干":"下列是SpringBoot Starter的工作原理的描述正确的是","选项D":"嵌入Tomcat无需部署war包，直接打成jar包nohup java -jar \u2013 & 启动就好","知识点":"缺省知识点","答案":"ABC","选项C":"根据@Conditional注解的条件，进行自动配置并将bean注入到Spring Context","选项B":"根据spring.factories配置加载AutoConfigure","选项A":"SpringBoot在启动时扫描项目依赖的jar包，寻找包含spring.factories文件的jar","类型":"2-多选"},{"题干":"SpringCloudConfig在配置信息进行更改的时候只能手动重启进行更新","选项D":null,"知识点":"缺省知识点","答案":"B","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"},{"题干":"SpringCloudConfig是一个集中化外部配置的分布式系统，由客户端和服务端组成","选项D":null,"知识点":"缺省知识点","答案":"A","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"},{"题干":"@EnableConfigServer注解是开启Spring Cloud Config的服务功能","选项D":null,"知识点":"缺省知识点","答案":"A","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"},{"题干":"微服务架构是一种架构模式或者说是一种架构风格，它提倡将单一应用程序划分为一组小的服务，每个服务运行在其独立的自己的进程中，服务之间相互协调、互相配合，为用户提供最终价值","选项D":null,"知识点":"缺省知识点","答案":"A","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"},{"题干":"熔断机制是应对高并发的一种微服务链路保护机制","选项D":null,"知识点":"缺省知识点","答案":"B","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"},{"题干":"在SpringCloud框架里熔断机制通过Ribbon实现","选项D":null,"知识点":"缺省知识点","答案":"B","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"},{"题干":"当网络稳定时，当前Eureka实例新的注册信息会被同步到其他节点。","选项D":null,"知识点":"缺省知识点","答案":"A","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"},{"题干":"断路器只拥有两种状态完全打开状态和关闭状态","选项D":null,"知识点":"缺省知识点","答案":"B","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"},{"题干":"@SpringBootApplication : 是Spring Boot 项目的核心注解 主要目的是开启自动配置主要组合了@Configuration @EnableAutoConfiguration @ComponentScan注解","选项D":null,"知识点":"缺省知识点","答案":"A","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"},{"题干":"SpringCloud是不依赖于SpringBoot的","选项D":null,"知识点":"缺省知识点","答案":"B","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"}],"name":"8单元"}