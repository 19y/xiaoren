{"data":[{"题干":"关于Hibernate和SpringData JPA的描述不正确的是","选项D":"Spring Data JPA引用JPQL（Java Persistence Query Language）查询语言，属于Spring整个生态体系的一部分","知识点":"缺省知识点","答案":"C","选项C":"Spring Data JPA是JPA规范的再次封装抽象，底层还是使用了Mybatis的技术实现","选项B":"着力对象与对象之间的关系，有自己的HQL查询语言，所以数据库移植性很好","选项A":"Hibernate是一个开放源代码的对象关系映射框架，对JDBC进行了非常轻量级的对象封装","类型":"1-单选"},{"题干":"下列是SpringDataJPA和JPA之间的关系下列说法正确的是","选项D":"JPA的使用上手简单但是开发效率较低","知识点":"缺省知识点","答案":"A","选项C":"SpringDataJPA可以方便的和Spring进行整合，但是不太适用于SpringBoot","选项B":"Spring Data JPA和JPA之间没有必然的关系","选项A":"Spring Data JPA是JPA规范的再次封装抽象，底层还是使用了Hibernate的JPA技术实现","类型":"1-单选"},{"题干":"如下代码创建一个新线程并启动线程，问:四个选项中可以保证正确代码创建target对象，并能编译正确的是（    ） public static void main(String[] args) {     Runnable target=new MyRunnable( );      Thread myThread=new Thread(target); }","选项D":"public class MyRunnable  implements Runnable  {          void run( ) { }","知识点":"缺省知识点","答案":"C","选项C":"  public class MyRunnable  implements Runnable  {    public void run( ) {        } }","选项B":"public class MyRunnable extends Runnable {    void run( ) {  } }","选项A":"public class MyRunnable extends Runnable {    public void run( ) {        } }","类型":"1-单选"},{"题干":"Thread类提供的线程控制方法的说法中，下列选项错误的是","选项D":"currentThread()方法返回当前线程的引用","知识点":"缺省知识点","答案":"C","选项C":"若线程A调用方法isAlive()返回值为false，则说明A正在执行中，也可能是可运行状态","选项B":"线程A通过调用interrupt()方法来中断其阻塞状态","选项A":"线程A中执行线程B的join()方法，则线程A等待直到B执行完成","类型":"1-单选"},{"题干":"在多个线程访问同一个资源时，可以使用（    ）关键字来实现线程同步，保证对资源安全访问。","选项D":"Yield","知识点":"缺省知识点","答案":"C","选项C":"Synchronized","选项B":"Transient","选项A":"Static","类型":"1-单选"},{"题干":"下列是Mybatis的优点描述其中错误的是","选项D":"提供映射标签，支持对象与数据库的ORM字段关系映射；提供对象关系映射标签，支持对象关系组件维护","知识点":"缺省知识点","答案":"C","选项C":"与各种数据库兼容性不好（因为MyBatis使用JDBC来连接数据库）","选项B":"与JDBC相比，消除了JDBC大量冗余的代码，不需要手动开关连接；","选项A":"基于SQL语句编程，相当灵活，不会对应用程序或者数据库的现有设计造成任何影响，SQL写在XML里，解除sql与程序代码的耦合，便于统一管理；提供XML标签，支持编写动态SQL语句，并可重用。","类型":"1-单选"},{"题干":"mybatis和hibernate比较的区别下列说法错误的是","选项D":"Mybatis性能优异同时兼并和Hibernate同等的可移植性","知识点":"缺省知识点","答案":"D","选项C":"Hibernate对象\/关系映射能力强，数据库无关性好，对于关系模型要求高的软件，如果用hibernate开发可以节省很多代码，提高效率。 ","选项B":"Mybatis直接编写原生态sql，可以严格控制sql执行性能，灵活度高，非常适合对关系数据模型要求不高的软件开发","选项A":"Mybatis和hibernate不同，它不完全是一个ORM框架","类型":"1-单选"},{"题干":"下列选项中关于Dubbo的描述信息错误的是","选项D":"Dubbo默认使用Simple注册中心","知识点":"缺省知识点","答案":"D","选项C":"Dubbo支持dubbo协议","选项B":"Dubbo和SpringCloud分布式服务相比通信方式不同，Dubbo 使用的是 RPC 通信，而 Spring Cloud 使用的是 HTTP RESTFul 方式","选项A":"Dubbo是阿里巴巴开源的基于 Java 的高性能 RPC 分布式服务框架，现已成为 Apache 基金会孵化项目。","类型":"1-单选"},{"题干":"下列关于Dubbo的负载均衡的机制的描述错误的是","选项D":"ConsistenHash LoadBalance 一致性Hash，按公约后的权重设置轮询比率","知识点":"缺省知识点","答案":"D","选项C":"LastActive LoadBalance 最少活跃调用数，相同活跃数的随机","选项B":"RoundRobin LoadBalance 轮询，按公约后的权重设置轮询比率","选项A":"Random LoadBalance 随机，按权重设置随机概率","类型":"1-单选"},{"题干":"以下不属于JSP作用域的通信对象的有","选项D":"cookie","知识点":"缺省知识点","答案":"D","选项C":"pageContext","选项B":"application","选项A":"Session","类型":"1-单选"},{"题干":"下列四个选项的描述Overload和Override的区别，其中错误的是","选项D":"如果在子类中定义某方法与其父类有相同的名称和参数，我们说该方法被重写 (Overloading)","知识点":"缺省知识点","答案":"D","选项C":"重载Overloading是一个类中多态性的一种表现","选项B":"重写Overriding是父类与子类之间多态性的一种表现","选项A":"方法的重写Overriding和重载Overloading是Java多态性的不同表现","类型":"1-单选"},{"题干":"下列有关Servlet的说法中错误的是","选项D":"Servlet事务service方法自动派遣运行与请求对应的doXXX方法（doGet，doPost）等，当服务器决定将实例销毁的时候调用其destroy方法。","知识点":"缺省知识点","答案":"B","选项C":"Servlet实例一般不会销毁，当容器关闭时其实例会被销毁","选项B":"Servlet通过多线程方式运行其service方法，一个实例可以服务于一个请求","选项A":"Servlet被服务器实例化后，容器运行其init方法","类型":"1-单选"},{"题干":"下面是关于变量以及其范围的的说法，其中哪些是错误的","选项D":" 局部变量在使用前必须被初始化","知识点":"缺省知识点","答案":"B","选项C":"在方法中定义的局部变量在该方法被执行时创建","选项B":"实例变量用关键字static声明","选项A":"实例变量是类的成员变量","类型":"1-单选"},{"题干":"将下面选项哪个是将字符串从\u201DShifr-JIS\u201D编码转换成\u201DUTF-8\u201D的编码。 String txt=\u201D阿斯蒂，丰富的\u201D; String utf=______________________;","选项D":"new String(txt.getBytes(\u201CShift-JIS\u201D),\u201DUTF-8\u201D);","知识点":"缺省知识点","答案":"D","选项C":"txt.setEncoding(\u201CUTF-8\u201D);","选项B":"new String(txt,\u201DUTF-8\u201D);","选项A":"new String(txt,\u201DShift-JIS\u201D,\u201DUTF-8\u201D);","类型":"1-单选"},{"题干":"下列选项中不属于Redis运行快的主要原因的是","选项D":"Redis存储的数据结构简单","知识点":"缺省知识点","答案":"D","选项C":"采用了非阻塞I\/O多路复用机制","选项B":"单线程操作，避免了频繁的上下文切换","选项A":"纯内存操作","类型":"1-单选"},{"题干":"下列关于String,StringBuilder,StringBuffer的说法错误的是","选项D":"StringBuilder：适用多线程下在字符缓冲区进行大量操作的情况","知识点":"缺省知识点","答案":"D","选项C":"String：适用于少量的字符串操作的情况","选项B":"线程安全:StringBuilder是线程不安全的，而StringBuffer是线程安全的","选项A":"运行速度:StringBuilder >StringBuffer >String","类型":"1-单选"},{"题干":"对于java中线程池的描述错误的是","选项D":"使用线程池可以使线程的创建不用人工控制，但是会让高并发情况下的线程运行效率降低","知识点":"缺省知识点","答案":"D","选项C":"线程池不需要每次都去创建,相应时间更快.","选项B":"线程池每次都不需要去创建和销毁,节约了资源","选项A":"限定线程的个数,不会导致由于线程过多导致系统运行缓慢或崩溃","类型":"1-单选"},{"题干":"以下是关于JSP和SERVLET的一些描述其中不合理的是","选项D":"JSP 和 Servlet是两种不同的技术，本质上是不一样的","知识点":"缺省知识点","答案":"D","选项C":"JSP 的情况是Java和HTML可以组合成一个扩展名为.jsp 的文件。做界面展示比较方便,而嵌入逻辑复杂","选项B":"Servlet 的应用逻辑是在Java文件中，并且完全从表示层中的HTML里分离开来。Servlet如果要实现html功能,必须使用Writer输出对应的html. ","选项A":"JSP 侧重于视图，Servlet 主要用于控制逻辑","类型":"1-单选"},{"题干":"下列是S二十四on你和Cookie的描述其中错误的是","选项D":"session会在一定时间内保存在服务器上,当访问增多时,会影响服务器的性能.考虑到服务器性能,应当使用cookie","知识点":"缺省知识点","答案":"C","选项C":"单个cookie保存数据不能超过8k,很多浏览器显示一个站点最多保存30个cookie","选项B":"cookie不是很安全,别人可以通过分析存放在本地的cookie并进行cookie欺骗,考虑到安全应该使用session ","选项A":"cookie的数据存储在客户端,session的数据存储在服务器上 ","类型":"1-单选"},{"题干":"下列不属于数据库事务的特征的是","选项D":"完整性","知识点":"缺省知识点","答案":"D","选项C":"持久性","选项B":"一致性","选项A":"原子性","类型":"1-单选"},{"题干":"下面是属于JPA的优势的是","选项D":"对对象的支持比较好，灵活性大","知识点":"缺省知识点","答案":"ABCD","选项C":"开发者不用关心和配置更多的动心","选项B":"加快了开发的效率","选项A":"使用起来比较方便","类型":"2-多选"},{"题干":"下面是对JPA的一些简介信息，描述正确的是","选项D":"JPA的宗旨是为POJO提供持久化标准规范","知识点":"缺省知识点","答案":"ABCD","选项C":"JPA支持XML和JDK5.0注解两种元数据的形式","选项B":"面向对象的查询语言","选项A":"JPA是Java Persistence API的简称，中文名为Java持久层API","类型":"2-多选"},{"题干":"关于nginx负载均衡的说法正确的是","选项D":"failover 失败了转发","知识点":"缺省知识点","答案":"ABC","选项C":"ip_hash 每个请求按访问ip的hash结果分配，这样每个访客固定访问一个后端服务器，可以解决session的问题","选项B":"weight 指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况。","选项A":"轮询（默认） 每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器down掉，能自动剔除","类型":"2-多选"},{"题干":"下面是对HashMap和HashTable的描述正确的是","选项D":"通过contains方法可以判断一个对象是否存在于HashMap或者Hashtable中。","知识点":"缺省知识点","答案":"ABC","选项C":"HashMap允许将null作为一个entry的key或者value，而Hashtable不允许。","选项B":"HashMap非线程安全，在多个线程访问Hashtable时，不需要自己为它的方法实现同步，而HashMap就必须为之提供额外同步","选项A":"他们都实现了Map接口。","类型":"2-多选"},{"题干":"下列哪些方法可以让正在执行的线程中断","选项D":"执行notify()","知识点":"缺省知识点","答案":"ABC","选项C":"执行Sleep()","选项B":"执行interrupt()","选项A":"执行wait()","类型":"2-多选"},{"题干":"在线程通信中，可以调用wait()、notify()、notifyAll()三个方法实现线程通信下列对着三个方法描述正确的是","选项D":"notifyAll()方法唤醒所有 wait 线程","知识点":"缺省知识点","答案":"ABD","选项C":"notify()方法可以使线程处于阻塞状态","选项B":"这三个方法都是Object类提供的public方法","选项A":"wait()方法可以使线程处于阻塞状态","类型":"2-多选"},{"题干":"下列关于Spring的注解说法正确的是","选项D":"@ResponseBody - 用来作为响应主要响应html数据","知识点":"缺省知识点","答案":"ABC","选项C":"@RequestMapping - 用于在控制器处理程序方法中配置 URI 映射。","选项B":"@Service - 用于服务类。","选项A":"@Controller - 用于 Spring MVC 项目中的控制器类","类型":"2-多选"},{"题干":"以下选项中SpringDataJPA定义实体类能用到的注解有","选项D":"@Service","知识点":"缺省知识点","答案":"ABC","选项C":"@Id","选项B":"@Table","选项A":"@Entity","类型":"2-多选"},{"题干":"一下是SpringData所支持的NOSQL存储的有","选项D":"Memcached（键\/值存储）","知识点":"缺省知识点","答案":"ABC","选项C":"Hbase（列族数据库）","选项B":"Redis（键\/值存储）","选项A":"MongoDB （文档数据库）","类型":"2-多选"},{"题干":"下列是关于JPA和Mybatis的描述正确的是","选项D":"如果用hibernate学习起来比较费时间，而mybatis相对来说比较简单","知识点":"缺省知识点","答案":"ABCD","选项C":"jpa开发相对更简单一些","选项B":"jpa移植性比较好，不用关心用什么数据库，因为mybatis自由写sql语句，所以当项目移植的时候还需要改sql","选项A":"jpa是对象与对象之间的映射，而mybatis是对象和结果集的映射","类型":"2-多选"},{"题干":"JPA的底层还是使用了HIbernate","选项D":null,"知识点":"缺省知识点","答案":"A","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"},{"题干":"JPA是Java Persistence API的简称，中文名为Java持久层API","选项D":null,"知识点":"缺省知识点","答案":"A","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"},{"题干":"JPA是JDK 5.0注解或XML描述对象－关系表的映射关系，并将运行期的实体对象持久化到数据库中。","选项D":null,"知识点":"缺省知识点","答案":"A","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"},{"题干":"如果线程调用了对象的 wait()方法，那么线程便会处于该对象的等待池中，等待池中的线程不会去竞争该对象的锁。","选项D":null,"知识点":"缺省知识点","答案":"A","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"},{"题干":"当有线程调用了对象的 notifyAll()方法（唤醒所有 wait 线程）或 notify()方法（只随机唤醒一个 wait 线程）","选项D":null,"知识点":"缺省知识点","答案":"A","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"},{"题干":"进程是线程Thread内部的一个执行单元，它是程序中一个单一顺序控制流程。","选项D":null,"知识点":"缺省知识点","答案":"B","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"},{"题干":"用new关键字建立一个线程对象后，该线程对象就处于新生状态。处于新生状态的线程有自己的内存空间，通过调用start进入就绪状态","选项D":null,"知识点":"缺省知识点","答案":"A","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"},{"题干":"Spring Data JPA 是 Spring 基于 ORM 框架、JPA 规范的基础上封装的一套JPA应用框架，可使开发者用极简的代码即可实现对数据的访问和操作","选项D":null,"知识点":"缺省知识点","答案":"A","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"},{"题干":"JPA(Java Persistence API)是Sun官方提出的Java持久化规范。它为Java开发人员提供了一种对象\/关联映射工具来管理Java应用中的关系数据。","选项D":null,"知识点":"缺省知识点","答案":"A","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"},{"题干":"SpringData : Spring 的一个子项目。用于简化数据库访问，支持NoSQL 和 关系数据存储。其主要目标是使数据库的访问变得方便快捷。","选项D":null,"知识点":"缺省知识点","答案":"A","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"}],"name":"9单元"}