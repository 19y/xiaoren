{"data":[{"题干":"以下概念的描述不正确的是","选项D":"Ribbon是一个客户端的容错软件","知识点":"缺省知识点","答案":"D","选项C":"F5硬件可以用来做负载均衡","选项B":"nginx可以用来做负载均衡","选项A":"负载均衡就是利用特定的方式将流量分摊到多个操作单元上的一种手段","类型":"1-单选"},{"题干":"以下正确的是","选项D":"Ribbon是SpringBoot中的一个重要组件","知识点":"缺省知识点","答案":"A","选项C":"Ribbon是一个客户端的容错服务","选项B":"Ribbon是一种线程内的负载均衡器","选项A":"Ribbon是netflix开发的一个组件","类型":"1-单选"},{"题干":"关于Ribbon的负载均衡策略下面的说法正确的有","选项D":"Ribbon的负载均衡策略RetryRule是一种轮询策略","知识点":"缺省知识点","答案":"A","选项C":"Ribbon的负载均衡策略RoundRobinRule是一种随机选择策略","选项B":"ip_hash是Ribbon的负载均衡策略","选项A":"RandomRule是Ribbon的负载均衡策略","类型":"1-单选"},{"题干":"关于Ribbon的负载均衡策略BestAvailableRule的说法正确的是","选项D":"在一个配置时间段内当选择Server不成功，则一直尝试选择一个可用的Server","知识点":"缺省知识点","答案":"A","选项C":"按顺序循环选择Server","选项B":"随机选择Server","选项A":"逐个考察Server,如果Server断路器打开则忽略再选则其中并发链接最低的Server","类型":"1-单选"},{"题干":"关于ribbon默认的负载均衡策略描述正确的是","选项D":"ribbon默认的负载均衡策略区域权衡策略","知识点":"缺省知识点","答案":"C","选项C":"ribbon默认的负载均衡策略默认是轮询策略","选项B":"ribbon默认的负载均衡策略随机策略","选项A":"ribbon默认的负载均衡策略是权重","类型":"1-单选"},{"题干":"下面的一些描述错误的是","选项D":"有很多模块整合了Spring","知识点":"缺省知识点","答案":"A","选项C":"Hibernate可以和Spring整合使用","选项B":"Spring可以和Mybatis集成","选项A":"Spring不容易和其他框架整合使用","类型":"1-单选"},{"题干":"在hibernate接口中一下那些可以和数据库交互","选项D":"Delete","知识点":"缺省知识点","答案":"B","选项C":"Query","选项B":"Session","选项A":"Configure","类型":"1-单选"},{"题干":"Ribbon的饥饿加载的含义下边的说法正确的是","选项D":"Ribbon的饥饿加载可以使我们的程序免于访问超时","知识点":"缺省知识点","答案":"B","选项C":"Ribbon的饥饿加载使我们的应用程序在第一次访问的时候更加快捷","选项B":"Ribbon在启动的时候不加载上下文而是在实际请求的时候才去创建","选项A":"Ribbon在启动的时候就要加载上下文","类型":"1-单选"},{"题干":"以下是让Ribbon禁止使用Eureka的配置是","选项D":"ribbon.eureka.port=2081","知识点":"缺省知识点","答案":"B","选项C":"ribbon.eureka.address=xxx.xxx.xxx.xxx","选项B":"ribbon.eureka.enable=false","选项A":"ribbon.eureka.enable=true","类型":"1-单选"},{"题干":"下列代码中会产生编译错误的行是 public class Test{   int m,n;   public Test(){}   public Test(int a){m=a;}   public static void main(String args[]){   Test t1,t2;   int j,k;   j=0;k=0;   t1=new Test();   t2=new Test(j,k);   }  }","选项D":"第十行","知识点":"缺省知识点","答案":"D","选项C":" 第六行  ","选项B":"第五行 ","选项A":"第三行 ","类型":"1-单选"},{"题干":"下列叙述中，正确的是","选项D":"源文件中public类的数目不限","知识点":"缺省知识点","答案":"A","选项C":" 源文件名其扩展为.jar ","选项B":"源文件名与public类名可以不相同 ","选项A":"java语言的标识符是区分大小写的 ","类型":"1-单选"},{"题干":"下面的java标识符是合法的是","选项D":"-3.123","知识点":"缺省知识点","答案":"A","选项C":"+stack","选项B":"5bat","选项A":"_cat","类型":"1-单选"},{"题干":"根据下面的代码  String s = null;  会抛出NullPPointerException 异常的有","选项D":"if((s==null)||(s.length()==0))","知识点":"缺省知识点","答案":"C","选项C":" if((s==null|(s.length()==0)) ","选项B":"if((s!=null)&&(s.length()>0)) ","选项A":"If(s!=null&&s.length()>0) ","类型":"1-单选"},{"题干":"执行如下代码 a=0;c=0; do{ --c;a=a-1; }while(a>0);后，c的值是","选项D":"死循环","知识点":"缺省知识点","答案":"C","选项C":"-1","选项B":"1","选项A":"0","类型":"1-单选"},{"题干":"分析下面的代码，哪些叙述是正确的 public class Person{  static int arr[] = new int[10];  public static void main(String a[]){  System.out.println(arr[1]);  }  }","选项D":"输出null","知识点":"缺省知识点","答案":"C","选项C":" 输出0 ","选项B":"编译时正确，而运行时出错 ","选项A":"编译时出错 ","类型":"1-单选"},{"题干":"以下哪些java容器是线程安全的","选项D":"HashMap","知识点":"缺省知识点","答案":"A","选项C":" HashSet ","选项B":"ArrayList ","选项A":"Vector ","类型":"1-单选"},{"题干":"以下代码是那种设计模式 public class A{  private static A instance = null;  public static A getInstance(){  if(instance==null)  instance = new A();  return instance;}  }","选项D":"装饰模式","知识点":"缺省知识点","答案":"C","选项C":"单例模式","选项B":" 适配器模式 ","选项A":"工厂模式 ","类型":"1-单选"},{"题干":"关于POST和GET请求说法正确的是 ","选项D":"POST和GET都不会把请求参数加入到url中","知识点":"缺省知识点","答案":"B","选项C":"POST和GET都会把请求参数加入到url中","选项B":"get会把请求参数加入到url中","选项A":"POST会把请求参数加入到url中","类型":"1-单选"},{"题干":"关于构造器是否可以被override，是否可以被overload","选项D":"能，不能","知识点":"缺省知识点","答案":"C","选项C":"不能，能 ","选项B":"不能，能 ","选项A":"能，能 ","类型":"1-单选"},{"题干":"当一个对象的引用被设置为null的时候垃圾收集器会在什么时候释放被占用的内存","选项D":"不确定","知识点":"缺省知识点","答案":"A","选项C":"方法调用结束后释放 ","选项B":"立即释放 ","选项A":"下一个垃圾回收周期 ","类型":"1-单选"},{"题干":"下列是Ribbon的负载均衡策略的是","选项D":"RetryRule","知识点":"缺省知识点","答案":"BCD","选项C":"RoundRobinRule","选项B":"RandomRule","选项A":"ip_hash","类型":"2-多选"},{"题干":"属于饥饿加载的特点的选项是","选项D":"饥饿加载在程序启动的时候就开始加载上下文","知识点":"缺省知识点","答案":"ABC","选项C":"饥饿加载会使我们的程序启动的时候更快捷","选项B":"饥饿加载严重的情况下会引起调用超时","选项A":"Ribbon的饥饿加载会使我们的程序第一次访问的时候显的比较缓慢","类型":"2-多选"},{"题干":"switch（）{}结构中，括号中可使用的数据类型不能是（）。 ","选项D":" float","知识点":"缺省知识点","答案":"AD","选项C":" short ","选项B":"int ","选项A":"long ","类型":"2-多选"},{"题干":"下列是关于转发和重定向的描述其中错误的是","选项D":" 重定向保持request中存放参数  ","知识点":"缺省知识点","答案":"CD","选项C":"重定向url不会改变 ","选项B":"转发能保持request中存放参数","选项A":"转发url不会改变 ","类型":"2-多选"},{"题干":"下面的sql语句中下划线中填入什么可以让sql正确 Select num，name，count（score） from play group by____,_____","选项D":"count（score）","知识点":"缺省知识点","答案":"AB","选项C":"score","选项B":"name","选项A":"num","类型":"2-多选"},{"题干":"下列的选项哪些会使索引失效","选项D":"查询条件使用函数在索引列上","知识点":"缺省知识点","答案":"ABCD","选项C":"条件包含or  ","选项B":"条件中包含<>","选项A":"使用like关键字 ","类型":"2-多选"},{"题干":"下面哪些说法是错误的","选项D":"用 New运算符来创建的对象，在 JVM退出时才会被做垃圾回收","知识点":"缺省知识点","答案":"ABCD","选项C":"java函数支持重载。但函数必须至少有一个參数或返回值的类型不同或个数不同","选项B":"java 函数的参数传递规定。所有的原始类型（如整数）和对象（使用 new来创建的）都为地址传递 ","选项A":"判断一个对象是否可以被垃圾回收条件为是否还有对该对象的引用。","类型":"2-多选"},{"题干":"在J2EE中，以下是jsp隐式对象的是","选项D":"application","知识点":"缺省知识点","答案":"CD","选项C":"out","选项B":"context","选项A":"PageContest","类型":"2-多选"},{"题干":"下列的选项哪些不能修饰interface","选项D":"public","知识点":"缺省知识点","答案":"ABC","选项C":"protected ","选项B":"static","选项A":"private","类型":"2-多选"},{"题干":"下面是有关数组的表述错误的是","选项D":"数组的大小可以任意改变","知识点":"缺省知识点","答案":"AD","选项C":"int number= [] = {43,35,63}","选项B":"数组是一种对象","选项A":"数组属于一种原生类","类型":"2-多选"},{"题干":"Ribbon的负载均衡策略RoundRobinRule是一种随机选择策略","选项D":null,"知识点":"缺省知识点","答案":"B","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"},{"题干":"Ribbon的负载均衡策略RetryRule是一种轮询策略","选项D":null,"知识点":"缺省知识点","答案":"B","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"},{"题干":"Ribbon的负载策略中BestAvailableRule是一种最低并发策略","选项D":null,"知识点":"缺省知识点","答案":"A","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"},{"题干":"Ribbon是2012年11月由apache公司开发的一款负载均衡组件","选项D":null,"知识点":"缺省知识点","答案":"B","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"},{"题干":"Ribbon可以实现和F5硬件一样的 软负载均衡","选项D":null,"知识点":"缺省知识点","答案":"A","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"},{"题干":"Ribbon总共支持7种负载均衡策略","选项D":null,"知识点":"缺省知识点","答案":"A","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"},{"题干":"CGLIB动态代理必须要有接口，而JDK动态代理是面向类的","选项D":null,"知识点":"缺省知识点","答案":"B","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"},{"题干":"Java程序中类名和该类对应的文件名可以不同","选项D":null,"知识点":"缺省知识点","答案":"B","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"},{"题干":"在Java的方法中定义一个常量要用const关键字","选项D":null,"知识点":"缺省知识点","答案":"B","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"},{"题干":"java中一个类可以实现多接口，并且支持多继承","选项D":null,"知识点":"缺省知识点","答案":"B","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"}],"name":"4单元"}