{"data":[{"题干":"下列是对Swagger的描述，不准确的是","选项D":"Swagger必须要单独的部署成一个API服务","知识点":"缺省知识点","答案":"D","选项C":"Swagger的目标是为REST APIs 定义一个标准的，与语言无关的接口","选项B":"Swagger 是一个规范和完整的框架，用于生成、描述、调用和可视化 RESTful 风格的 Web 服务","选项A":"Swagger 是一款RESTFUL接口的文档在线自动生成+功能测试功能软件","类型":"1-单选"},{"题干":"下列是对finaly的理解正确的是","选项D":"可以覆盖finaly方法提供垃圾收集时的其他资源回收，例如关闭文件等","知识点":"缺省知识点","答案":"A","选项C":"finaly是Object中的一个方法，在垃圾收集器执行的时候会调用被回收对象的此方法","选项B":"finaly要结合catch块才可以运行，单独运行的话会报运行时异常","选项A":"无论是否抛出异常，finally代码块总是会被执行。就算是没有catch语句同时又抛出异常的情况下，finally代码块仍然会被执行","类型":"1-单选"},{"题干":"下面对Java异常的处理的相关描述，其中的描述哪一项是错的","选项D":"finally块不能单独使用，必须始终与try块在一起","知识点":"缺省知识点","答案":"A","选项C":"catch块不能单独使用，必须始终与try块在一起","选项B":"一个try块中只能有一个catch语句","选项A":"一个try块中可以不使用catch语句","类型":"1-单选"},{"题干":"下面代码的运行结果是什么 FileOutputStream fos = new FileOutputStream(\u201Cc:\\\\demo.txt\u201D); fos.write(\u201Cabc\u201D); fos.close();","选项D":"将C盘已有的文件demo.txt中追加写入abc","知识点":"缺省知识点","答案":"C","选项C":"编译失败","选项B":"在C盘创建文件demo.txt,并写入数据abc ","选项A":"在C盘创建文件demo.txt,但文件是空的 ","类型":"1-单选"},{"题干":"下列代码处理的是什么问题 BufferedReader br = new BufferedReader(new FileReader(\"c:\\\\a.txt\")); BufferedWriter bw = new BufferedWriter(new FileWriter(\"d:\\\\b.txt\")); String line = null; while ((line = br.readLine()) != null) { bw.write(line); bw.newLine(); bw.flush(); } bw.close(); br.close();","选项D":"把控制台的内容写入到d盘目录下的b.txt文件中","知识点":"缺省知识点","答案":"B","选项C":"读取c盘目录下a.txt文件，输出在控制台","选项B":"把c盘目录下的a.txt文件内容复制到d盘目录下的b.txt","选项A":"把d盘目录下的b.txt文件内容复制到c盘目录下的a.txt  ","类型":"1-单选"},{"题干":"下列的给出的描述哪些不是事务的ACID的特性","选项D":"持久性","知识点":"缺省知识点","答案":"C","选项C":"可用性","选项B":"一致性","选项A":"原子性","类型":"1-单选"},{"题干":"下列描述是关于GET请求和POST请求的区别错误的是","选项D":"get使用MIME类型application\/urlencoded的URL编码（也叫百分号编码）文本的格式传递参数，保证被传送的参数由遵循规范的文本组成，例如一个空格的编码是\"%20\"","知识点":"缺省知识点","答案":"D","选项C":"get传输的数据要受到URL长度限制（1024字节）；而post可以传输大量的数据，上传文件通常要使用post方式","选项B":"get将表单中数据按照name=value的形式，添加到action 所指向的URL后面，并且两者使用\"?\"连接，而各个变量之间使用\"&\"连接；post是将表单中的数据放在HTTP协议的请求头或消息体中，传递到action所指向URL； ","选项A":"get请求用来从服务器上获得资源，而post是用来向服务器提交数","类型":"1-单选"},{"题干":"下列关于JSP和Servlet的关系描述错误是","选项D":"Servlet和JSP最主要的不同点在于，JSP的应用逻辑是在Java文件中，并且完全从表示层中的HTML分离开来","知识点":"缺省知识点","答案":"D","选项C":"JSP本质上是Servlet的一种简易形式，JSP会被服务器处理成一个类似于Servlet的Java程序","选项B":"它运行于服务器的JVM中，能够依靠服务器的支持向浏览器提供显示内容","选项A":"Servlet是一个特殊的Java程序","类型":"1-单选"},{"题干":"下列是关于JavaWeb开发中监听器的描述，错误的是","选项D":"ServletRequestListener：用来监听请求的创建","知识点":"缺省知识点","答案":"D","选项C":"HttpSessionListener：对Session的创建和销毁进行监听","选项B":"ServletContextAttributeListener：监听Servlet上下文属性的添加、删除和替换","选项A":"ServletContextListener：对Servlet上下文的创建和销毁进行监听","类型":"1-单选"},{"题干":"下列对Hibernate的对象的状态的描述，错误的是","选项D":"调用persist()可以将游离态对象变为持久态","知识点":"缺省知识点","答案":"D","选项C":"调用save()可以将将瞬时态对象变成持久态","选项B":"游离态的实例可以通过调用以replicate()变成持久态","选项A":"瞬时态的实例可以通过调用saveOrUpdate()方法变成持久态","类型":"1-单选"},{"题干":"下列关于Redis的持久化的方式的描述错误的是","选项D":"AOF持久化方式文件会比RDB形式的文件小，数据恢复更快速","知识点":"缺省知识点","答案":"D","选项C":"AOF持久化方式通过append模式写文件，即使中途服务器宕机，可以通过redis-check-aof工具解决数据一致性问题","选项B":"AOF持久化方式的优点是数据安全，aof持久化可以配置appendfsync属性，有always，每进行一次命令操作就记录到aof文件中一次","选项A":"AOF持久化方式：是指所有的命令行记录以redis命令请求协议的格式保存为aof文件。","类型":"1-单选"},{"题干":"下列关于数据库的事务的隔离级别的说法错误的是","选项D":"Read uncommitted (读未提交)：最低级别，任何情况都无法保证","知识点":"缺省知识点","答案":"C","选项C":"Read committed (读已提交)：可避免脏读、不可重复读的发生","选项B":"Repeatable read (可重复读)：可避免脏读、不可重复读的发生","选项A":"Serializable (串行化)：可避免脏读、不可重复读、幻读的发生","类型":"1-单选"},{"题干":"下列选项不属于Spring的特性的是","选项D":"消息队列支持","知识点":"缺省知识点","答案":"D","选项C":"声明事物的支持","选项B":"AOP编程的支持","选项A":"方便解耦，简化开发","类型":"1-单选"},{"题干":"为指定的文件简历一个硬链接的linux命令是","选项D":"links -s","知识点":"缺省知识点","答案":"A","选项C":"links","选项B":"ln -s","选项A":"ln","类型":"1-单选"},{"题干":"下列给出的命令中哪个可以用来停止Linux系统中的进程","选项D":"以上都不是","知识点":"缺省知识点","答案":"C","选项C":"kill","选项B":"down","选项A":"stop","类型":"1-单选"},{"题干":"Web服务器tomcat默认监听的端口号是","选项D":"5672","知识点":"缺省知识点","答案":"B","选项C":"80","选项B":"8080","选项A":"1024","类型":"1-单选"},{"题干":"free的哪一个参数可以以Mb的单位显示系统中的资源","选项D":"k","知识点":"缺省知识点","答案":"B","选项C":"t","选项B":"m","选项A":"b","类型":"1-单选"},{"题干":"Linux系统用什么方式鉴别root用户","选项D":"第一个登陆系统的帐户","知识点":"缺省知识点","答案":"B","选项C":"口令中包含root的帐户","选项B":"uid是0的用户","选项A":"用户名是root的用户","类型":"1-单选"},{"题干":"下面程序的输出结果是什么 ? Set<String> set= new HashSet<String>(); set.add(\"aaa\"); set.add(\"bbb\"); set.add(\"aaa\"); set.add(\"Bbb\"); set.add(\"aaa\"); System.out.println(set.size());","选项D":"2","知识点":"缺省知识点","答案":"C","选项C":"3","选项B":"4","选项A":"5","类型":"1-单选"},{"题干":"下列代码执行后输出的结果是什么？\nArrayList<String> list1 = new ArrayList<String>();\nArrayList<Integer> list2 = new ArrayList<Integer>();\nSystem.out.println(list1.getClass().equals(list2.getClass()));","选项D":"true","知识点":"缺省知识点","答案":"D","选项C":"false","选项B":"代码运行时报错","选项A":"代码编译时报错","类型":"1-单选"},{"题干":"下列是对Swagger的注解的一些解释正确的是","选项D":"@ApiOperation：用于方法，表示一个http请求的操作 。","知识点":"缺省知识点","答案":"ABCD","选项C":"@ApiModelProperty：用于方法，字段 ，表示对model属性的说明或者数据操作更改","选项B":"@ApiModel：用于类，表示对类进行说明，用于参数用实体类接收；","选项A":"@ApiImplicitParam：作用在方法上，表示单独的请求参数","类型":"2-多选"},{"题干":"下列属于是Swagger的注解的是","选项D":"@RequestParams","知识点":"缺省知识点","答案":"ABC","选项C":"@ApiParam","选项B":"@ApiOperation","选项A":"@Api","类型":"2-多选"},{"题干":"定义如下class A的代码如下 class A { protected int method1(int a, int b) { return 0; } } 如果有类class B extends A , 在class B中，下列哪两个方法定义是有效的？","选项D":"public short method1(int a, int b) { return 0; }","知识点":"缺省知识点","答案":"AC","选项C":"private int method1(int a, long b) { return 0; } ","选项B":"private int method1(int a, int b) { return 0; } ","选项A":"public int method1(int a, int b) { return 0; } ","类型":"2-多选"},{"题干":"下列是Java中有关类的继承的描述，正确的有哪些","选项D":"一个Java类继承另一个Java类需要使用 extends 关键字","知识点":"缺省知识点","答案":"BD","选项C":"子类自动拥有父类的所有方法","选项B":"一个Java类可以有多个子类","选项A":"一个JAva类同时可以继承多个接口","类型":"2-多选"},{"题干":"下列Java的关键字，对这些关键字的解释正确的是","选项D":"synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护","知识点":"缺省知识点","答案":"ABD","选项C":"native 关键字可以应用于方法，以指示该方法是用 Java 语言实现的。","选项B":"interface 关键字用来声明新的 Java 接口，接口是方法的集合。","选项A":"implements 关键字在 class 声明中使用，以指示所声明的类提供了在 implements 关键字后面的名称所指定的接口中所声明的所有方法的实现","类型":"2-多选"},{"题干":"下列是对Java 的关键字synchronize的描述其中正确的是","选项D":"如果应用于对象或数组，当关联的代码块一次由一个线程执行时，对象或数组将被锁定。","知识点":"缺省知识点","答案":"ABCD","选项C":"如果应用于实例方法，那么，当该方法一次由一个线程访问时，该实例将被锁定。","选项B":"如果应用于静态方法，那么，当该方法一次由一个线程执行时，整个类将被锁定","选项A":"synchronized 关键字可以应用于方法或语句块，并为一次只应由一个线程执行的关键代码段提供保护","类型":"2-多选"},{"题干":"下列是关于Error和Exception的区别，其中说法正确的是","选项D":"在Java中所有不是RuntimeException派生的Exception都是检查型异常","知识点":"缺省知识点","答案":"ABCD","选项C":"Exception是程序本身可以处理的异常","选项B":"Exception分为运行时异常和非运行时异常","选项A":"error是程序无法处理的错误，比如OutOfMemoryError","类型":"2-多选"},{"题干":"下列描述中列出了一些异常其中哪些是运行时异常","选项D":"NullPointerException ","知识点":"缺省知识点","答案":"ABD","选项C":"FileNotFindException","选项B":"IndexOutOfBoundsException ","选项A":"ClassCastException","类型":"2-多选"},{"题干":"已知下列的代码，关于这段代码的描述正确的是\nArrayList<Number> numbers = new ArrayList<Number>();\nnumbers.add(new Integer(10));\nnumbers.add(new Double(10.0d));","选项D":"代码运行时报错","知识点":"缺省知识点","答案":"AB","选项C":"这段代码编译时报错","选项B":"因为Integer,Double 都是Number的子类， ArrayList<E> 的add(E e) 方法经过编译器进行类型擦除以后变成了add(Number e)","选项A":"这段代码没有问题","类型":"2-多选"},{"题干":"下列的一些说法，其中说正确的是","选项D":"Java中的泛型基本上都是在编译器这个层次来实现的。","知识点":"缺省知识点","答案":"BCD","选项C":"在生成的Java字节码中是不包含泛型中的类型信息的","选项B":"泛型可以应用在接口， 类，和方法上","选项A":"ArrayList<int> list = new ArrayList<int> 是合法的","类型":"2-多选"},{"题干":"@Api()用于类，表示标识这个类是swagger的资源","选项D":null,"知识点":"缺省知识点","答案":"A","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"},{"题干":"@ApiOperation()用于方法，表示一个http请求的操作 ","选项D":null,"知识点":"缺省知识点","答案":"A","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"},{"题干":"@ApiModel()用于类表示对model属性的说明或者数据操作更改 ","选项D":null,"知识点":"缺省知识点","答案":"B","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"},{"题干":"@ApiParam() 用于方法，参数，字段说明；表示对参数的添加元数据","选项D":null,"知识点":"缺省知识点","答案":"A","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"},{"题干":"@ApiModelProperty()用于方法，字段； 表示对model属性的说明或者数据操作更改","选项D":null,"知识点":"缺省知识点","答案":"A","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"},{"题干":"return 关键字会导致方法返回到调用它的方法，从而传递与返回方法的返回类型匹配的值","选项D":null,"知识点":"缺省知识点","答案":"A","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"},{"题干":"switch 语句用于基于某个表达式选择执行多个代码块中的某一个或者多个","选项D":null,"知识点":"缺省知识点","答案":"B","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"},{"题干":"try 关键字用于包含可能引发异常的语句块，当异常被catch的时候方法将抛出异常","选项D":null,"知识点":"缺省知识点","答案":"B","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"},{"题干":"throws 关键字可以应用于方法，以便指出方法引发了特定类型的异常","选项D":null,"知识点":"缺省知识点","答案":"A","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"},{"题干":"无论是否抛出异常，finally代码块总是会被执行。就算是没有catch语句同时又抛出异常的情况下，finally代码块仍然会被执行","选项D":null,"知识点":"缺省知识点","答案":"A","选项C":null,"选项B":null,"选项A":null,"类型":"0-判断"}],"name":"13单元"}