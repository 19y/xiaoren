[{"题干":"大数据-HashMap&lt;String,\u00A0Object&gt;\u00A0map\u00A0=\u00A0new\u00A0HashMap&lt;String,\u00A0Object&gt;();\n\u00A0\u00A0map.put(&quot;name&quot;,\u00A0&quot;张三&quot;);\n\u00A0\u00A0map.put(&quot;age&quot;,\u00A032);\n\u00A0\u00A0map.put(&quot;sex&quot;,\u00A0&quot;男&quot;);\n\u00A0\u00A0Set&lt;String&gt;\u00A0set\u00A0=\u00A0map.keySet();\n\u00A0\u00A0for\u00A0(String\u00A0key\u00A0:\u00A0set)\u00A0{\n\u00A0\u00A0\u00A0System.out.println(key\u00A0+\u00A0&quot;--&gt;&gt;&quot;\u00A0+\u00A0map.get(key));\n\u00A0\u00A0}","选项F":"","选项E":"","选项D":"程序有错，循环条件不对，形成了无限循环","答案":"C","选项C":"输出结果\u00A0sex-->>男\u00A0age-->>32\u00A0name-->>张三","选项B":"没有任何输出结果","选项A":"输出结果name-->>张三","类型":"1-单选"},{"题干":"使用了未开辟空间情况下的类，发生的异常是（）。","选项F":"","选项E":"","选项D":"ArithmeticException","答案":"C","选项C":"NullPointerException","选项B":"FileNotFoundException","选项A":"ArrayOutOfBoundsException","类型":"1-单选"},{"题干":"大数据-以下选项中参数不合法的异常是","选项F":"","选项E":"","选项D":"IllegalArgumentException5","答案":"D","选项C":"NullPointerException5","选项B":"EmptyStackException5","选项A":"IndexOutOfBoundsException5","类型":"1-单选"},{"题干":"大数据-下面哪个属于编译异常","选项F":"","选项E":"","选项D":"java.lang.ClassCastException","答案":"B","选项C":"java.lang.ArrayIndexoutofBoundsException","选项B":"java.io.IOException","选项A":"java.lang.ArithmeticException","类型":"1-单选"},{"题干":"如果在循环过程中可能会出现异常需要捕获，但并不想结束循环而是捕获异常后，继续循环。以下代码能够实现以上业务需求的是（）。","选项F":"","选项E":"","选项D":"try { for (int i = 0; i <100; i++) { ... } } catch (Exception e) { continue; }","答案":"C","选项C":"for (int i = 0; i <100; i++) { try { ... } catch (Exception e) { continue; } }","选项B":"try { for (int i = 0; i <100; i++) { ... } } catch (Exception e) { break; }","选项A":"for (int i = 0; i <100; i++) { try { ... } catch (Exception e) { break; } }","类型":"1-单选"},{"题干":"大数据-HashSet\u00A0<Integer>\u00A0hs\u00A0=\u00A0new\u00A0HashSet\u00A0<Integer>();\n\u00A0\u00A0hs.add(0);\n\u00A0\u00A0hs.add(0);\n\u00A0\u00A0hs.add(0);\n\u00A0\u00A0hs.add(1);\n\u00A0\u00A0hs.add(1);\n\u00A0for\u00A0(int\u00A0i\u00A0:\u00A0hs){\n\u00A0\u00A0\u00A0\u00A0System.out.print(i);\u00A0\n\u00A0\u00A0}","选项F":"","选项E":"","选项D":"程序报错，第一行代码应该改成Set<Integer>\u00A0hs\u00A0=\u00A0new\u00A0HashSet<Integer>()","答案":"C","选项C":"输出结果：0\u00A01","选项B":"程序报错，不允许插入重复内容","选项A":"输出结果：0\u00A00\u00A00\u00A01\u00A01","类型":"1-单选"},{"题干":"JAVA的异常处理模型中,无论是否发生异常,(  )块中的代码都会执行。","选项F":"","选项E":"","选项D":"catch","答案":"B","选项C":"throw","选项B":"finally","选项A":"try","类型":"1-单选"},{"题干":"java中，哪种是数学计算异常？","选项F":"","选项E":"","选项D":"ArrayOutOfBoundsException","答案":"B","选项C":"FileNotFoundException","选项B":"ArithmeticException","选项A":"NullPointerException","类型":"1-单选"},{"题干":"大数据-如果在try块中出现了return语句，那么它与finally块中的语句的执行顺序是","选项F":"","选项E":"","选项D":"finally块中的语句先执行","答案":"D","选项C":"return语句不执行","选项B":"两块语句块中的语句无法判断先后顺序","选项A":"try块中的return语句先执行","类型":"1-单选"},{"题干":"大数据-异常处理语法中只有try块是必须的，catch块和（ ）块是可选的，但必须出现其中之一，也可同时出现","选项F":"","选项E":"","选项D":"finally","答案":"D","选项C":"try","选项B":"throw","选项A":"catch","类型":"1-单选"},{"题干":"大数据-下列关于异常说法错误的是","选项F":"","选项E":"","选项D":"在java的异常体系中，最大父类是Exception","答案":"D","选项C":"NullPointerException是系统提供的异常","选项B":"异常可以分为运行异常和编译异常","选项A":"如果系统异常不能满足我们的需要，我们可以自定义异常","类型":"1-单选"},{"题干":"处理异常的时候我们可以用异常跟踪栈来跟踪异常发生的根源地，若异常对象是e,显示异常信息，正确的代码是（  ）。","选项F":"","选项E":"","选项D":"System.out.print(e);","答案":"C","选项C":"e.printStackTrace();","选项B":"e.toString();","选项A":"e.print()","类型":"1-单选"},{"题干":"大数据-以下选项中使用throw抛出异常正确的是（）","选项F":"","选项E":"","选项D":"public�void�test()�throws�Exception�{\n    int�age�=�0;\n    age�=�-100;�\n    if�(age�<�0){\n        Exception�e�=�new�Exception();\n        throw�e;\n    }\n    System.out.println(age);\n}","答案":"D","选项C":"public�void�test(){\n    try{\n        int�[]�arr�=�new�int[-3];�\n    }catch(Exception�e){\n        throw�new�Exception();\n    }\n}","选项B":"public�void�test()�throw�Exception�{\n    int�[]�arr�=�new�int[-3];\n}","选项A":"public�void�test(){\n    try{\n        int�[]�arr�=�new�int[-3];�\n    }�throw(Exception�e){\n        System.out.println(e.getMessage());\n    }\n}","类型":"1-单选"},{"题干":"大数据-下列是文件未找到异常的是","选项F":"","选项E":"","选项D":"ArrayOutOfBoundsException","答案":"C","选项C":"FileNotFoundException","选项B":"ArithmeticException","选项A":"NullPointerException","类型":"1-单选"},{"题干":"以下选项中使用throws抛出异常正确的是（）。","选项F":"","选项E":"","选项D":"public�void�test(){\n    try{\n        int�[]�arr�=�new�int[-3];\n    }�throws(Exception�e){\n        System.out.println(e.getMessage());\n    }\n}","答案":"A","选项C":"public�void�test(){\n    try{\n        int�[]�arr�=�new�int[-3];\n    }�catch(Exception�e){\n        throws�new�Exception();\n    }\n}","选项B":"public�void�test()�{\n    int�age�=�0;�age�=�-100;\n    if�(age�<�0)�{\n        Exception�e�=�new�Exception();\n        throws�e;�\n    }\n    System.out.println(age);�\n}","选项A":"public�void�test()�throws�Exception�{\n    int�[]�arr�=�new�int[-3];\n}","类型":"1-单选"},{"题干":"大数据-public\u00A0static\u00A0void\u00A0main(String[]\u00A0args)\u00A0{\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\n\u00A0\u00A0\u00A0int\u00A0a=8,b=0,c=0;\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\n\u00A0\u00A0try{\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\n\u00A0\u00A0\u00A0\u00A0c=a/b;\u00A0\u00A0\u00A0\u00A0\u00A0\n\u00A0\u00A0\u00A0\u00A0\u00A0}catch(Exception\u00A0e){\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\n\u00A0\u00A0\u00A0\u00A0System.out.println(\"分母不能为0\");\u00A0\u00A0\u00A0\u00A0\u00A0\u00A0\n\u00A0\u00A0\u00A0}\u00A0\u00A0\u00A0\u00A0\u00A0\n}上述代码的输出结果为","选项F":"","选项E":"","选项D":"8","答案":"C","选项C":"分母不能为0","选项B":"1","选项A":"0","类型":"1-单选"},{"题干":"大数据-下列是数学计算异常的是","选项F":"","选项E":"","选项D":"ArrayOutOfBoundsException","答案":"B","选项C":"FileNotFoundException","选项B":"ArithmeticException","选项A":"NullPointerException","类型":"1-单选"},{"题干":"ArrayList <Integer> nums = new ArrayList <Integer>();\nfor(int i = 1;i <= 5 ;i++){\n\tnums.add(i);\n}\nnums.remove(3);\nfor(int tmp : nums){\n\tSystem.out.println(tmp);\n}","选项F":"","选项E":"","选项D":"输出结果是：1\u00A02\u00A03\u00A05","答案":"D","选项C":"输出结果是：1\u00A02\u00A04\u00A05","选项B":"输出结果是：1\u00A02\u00A03\u00A04\u00A05","选项A":"没有任何输出结果","类型":"1-单选"},{"题干":"大数据-一个类在未开辟空间的情况下就使用了，发生的异常是","选项F":"","选项E":"","选项D":"NullPointerException","答案":"D","选项C":"ArrayOutOfBoundsException","选项B":"FileNotFoundException","选项A":"ArithmeticException","类型":"1-单选"},{"题干":"大数据-在java异常处理机制中，try语法块的作用是（   ）","选项F":"","选项E":"","选项D":"消灭异常","答案":"C","选项C":"监视代码运行","选项B":"抛出异常","选项A":"终止异常","类型":"1-单选"},{"题干":"大数据-处理异常的时候我们可以用异常跟踪栈来跟踪异常发生的根源地，若异常对象是e,显示异常信息，正确的代码是","选项F":"","选项E":"","选项D":"e.toString();","答案":"B","选项C":"System.out.print(e);","选项B":"e.printStackTrace();","选项A":"e.print();","类型":"1-单选"},{"题干":"大数据-泛型在集合中的作用是","选项F":"","选项E":"","选项D":"在运行时不会检查集合中元素的类型","答案":"BD","选项C":"没有什么作用","选项B":"在编译的时候检查集合中元素的类型","选项A":"可以提高运行效率","类型":"2-多选"},{"题干":"大数据-以下对java.lang.NullPointerException说法正确的是","选项F":"","选项E":"","选项D":"ArrayList<Object>\u00A0list\u00A0=\u00A0new\u00A0ArrayList<Object>();\nObject\u00A0o\u00A0=\u00A0null;\nlist.add(o);\n以上代码不会引发NullPointerException","答案":"BCD","选项C":"ArrayList<Object>\u00A0list=null;\nlist.add(new\u00A0Object());\n以上代码会引发NullPointerException","选项B":"NullPointerException简单地说就是调用了未经初始化的对象或者是不存在的对象","选项A":"ArrayList<Object>\u00A0list\u00A0=\u00A0new\u00A0ArrayList<Object();\nObject\u00A0o\u00A0=\u00A0null;\u00A0list.add(o);\nSystem.out.println(list.get(0).toString());\n以上代码不会引发NullPointerException","类型":"2-多选"},{"题干":"大数据-关于运行异常与编译异常以下说法正确的是","选项F":"","选项E":"","选项D":"java编译器要求方法必须声明抛出可能发生的非运行时异常，但是并不要求必须声明抛出未被捕获的运行时异常","答案":"ABCD","选项C":"异常表示程序运行过程中可能出现的非正常状态","选项B":"编译异常在程序编写时一定要处理","选项A":"运行异常表示虚拟机的通常操作中可能遇到的异常，是一种常见运行错误","类型":"2-多选"},{"题干":"大数据-捕获异常时我们不建议try块过于庞大，因为","选项F":"","选项E":"","选项D":"try块过大可能需要很多的catch，使得程序复杂","答案":"BCD","选项C":"会降低运行效率","选项B":"不利于分析异常的原因","选项A":"会增加异常出现的概率","类型":"2-多选"},{"题干":"大数据-关于try...catch以下说法正确的是（）\ntry{\n逻辑代码块1\n}\ncatch(异常类型名 参数名){\n处理代码块1\n}","选项F":"","选项E":"","选项D":"如果try语句块中没有发生异常，那么try语句块正常结束，后面的catch语句块被跳过，程序将从catch语句块后的第一条语句开始执行","答案":"ABCD","选项C":"当程序中抛出一个异常后，并从程序代码处跳出，Java虚拟机检测寻找和try关键字匹配的处理该异常的catch块","选项B":"在Java中，通常是采用try...catch语句捕获异常并处理","选项A":"示例代码中，把可能引发异常的语句封装在try语句块中，用于捕获可能发生的异常。如果try语句块中发生异常那么一个相应的异常对象就会被抛出","类型":"2-多选"},{"题干":"大数据-下列关于Java中的异常机制的描述正确的是","选项F":"","选项E":"","选项D":"程序出错后进入到异常处理块中(catch)","答案":"ABCD","选项C":"有的代码一定要执行，可以选择放在finally块中","选项B":"将有可能产生错误的代码放在监视代码块中（try）","选项A":"通过异常堆栈信息的打印可以找到程序在运行时出错的代码","类型":"2-多选"},{"题干":"关于捕捉异常是用的try catch语句，下面写法不正确的是（）。","选项F":"","选项E":"","选项D":"try{}catch(Exception e){}","答案":"ABC","选项C":"try{}catch{}","选项B":"try{}catch(Exception ){}","选项A":"try{}catch(e){}","类型":"2-多选"},{"题干":"在java异常处理机制中，不是try语法块的作用是（）。","选项F":"","选项E":"","选项D":"终止异常","答案":"ACD","选项C":"抛出异常","选项B":"监视代码运行","选项A":"处理异常","类型":"2-多选"},{"题干":"下列关于异常处理机制，说法正确的是（）。","选项F":"","选项E":"","选项D":"Java程序的执行过程中如出现异常，会自动生成一个异常类对象，该异常对象将被提交给Java运行时系统，这个过程称为抛出(throw)异常","答案":"ABCD","选项C":"程序员通常只能处理异常(Exception)，而对错误(Error)无能为力","选项B":"如果Java运行时系统找不到可以捕获异常的方法，则运行时系统将终止，相应的Java程序也将退出","选项A":"当Java运行时系统接收到异常对象时，会寻找能处理这一异常的代码并把当前异常对象交给其处理，这一过程称为捕获(catch)异常","类型":"2-多选"},{"题干":"关于java.lang.ArrayIndexOutOfBoundsException以下描述正确的是（）。","选项F":"","选项E":"","选项D":"异常的解释是\"数组下标越界异常\"","答案":"ABCD","选项C":"此异常属于运行时异常","选项B":"如果出现该错误，检查数组对象下标是否大于了数组的长度-1","选项A":"现在程序中大多都有对数组的操作，因此在调用数组的时候一定要认真检查，看自己调用的下标是不是超出了数组的范围，以免出现这个异常","类型":"2-多选"},{"题干":"处理异常一定要用到的关键字是（）。","选项F":"","选项E":"","选项D":"finally","答案":"AB","选项C":"throw","选项B":"catch","选项A":"try","类型":"2-多选"},{"题干":"大数据-以下属于异常两大分支的是","选项F":"","选项E":"","选项D":"RunTimeException","答案":"AB","选项C":"Throwable","选项B":"Exception","选项A":"Error","类型":"2-多选"},{"题干":"程序中抛出异常时(throw…)，只能抛出自己定义的异常对象。","选项F":"","选项E":"","选项D":"","答案":"B","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"异常处理程序中最多只能有一个finally块。","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"如果异常发生时，没有捕获异常的代码，程序会正常执行。","选项F":"","选项E":"","选项D":"","答案":"B","选项C":"","选项B":"","选项A":"","类型":"0-判断"}]