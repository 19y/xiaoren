[{"题干":"下列选项中，可以获取本地IP地址对象的是","选项F":"","选项E":"","选项D":"getServerPort()","答案":"B","选项C":"getLocalPort()","选项B":"getLocalHost()","选项A":"getPort()","类型":"1-单选"},{"题干":"关于Java网络编程，ServerSocket中获取服务器绑定的端口的方法是","选项F":"","选项E":"","选项D":"getServerPort()","答案":"B","选项C":"getPort()","选项B":"getLocalPort()","选项A":"getInetAddress()","类型":"1-单选"},{"题干":"关于Java网络编程，当使用客户端套接字Socket创建对象时，需要指定","选项F":"","选项E":"","选项D":"服务器地址和文件","答案":"A","选项C":"服务器名称和文件","选项B":"服务器端口和文件","选项A":"服务器主机名称和端口","类型":"1-单选"},{"题干":"关于Java网络编程，使用UDP套接字通信时，常用哪个类把要发送的信息打包","选项F":"","选项E":"","选项D":"DatagramPacket","答案":"D","选项C":"MulticastSocket","选项B":"DatagramSocket","选项A":"String","类型":"1-单选"},{"题干":"关于Java网络编程，ServerSocket的监听方法accept()的返回值类型是","选项F":"","选项E":"","选项D":"DatagramSocket","答案":"C","选项C":"Socket","选项B":"Object","选项A":"void","类型":"1-单选"},{"题干":"关于Java网络编程，ServerSocket的getInetAddress()的返回值类型是","选项F":"","选项E":"","选项D":"URL","答案":"C","选项C":"InetAddress","选项B":"ServerSocket","选项A":"Socket","类型":"1-单选"},{"题干":"关于Java网络编程,TCP的全称是什么","选项F":"","选项E":"","选项D":"HyperText Transfer Protocol（超文本传输协议）","答案":"A","选项C":"Internet Protocol（网络之间互连的协议）","选项B":"User Datagram Protocol（用户数据报协议）","选项A":"Transmission Control Protocol（传输控制协议）","类型":"1-单选"},{"题干":"关于Java网络编程，若要取得数据包中的源地址，可使用下列哪个语句","选项F":"","选项E":"","选项D":"getData()","答案":"A","选项C":"getName()","选项B":"getPort()","选项A":"getAddress()","类型":"1-单选"},{"题干":"关于Java网络编程，使用流式套接字编程时，为了向对方发送数据，则需要使用哪个方法","选项F":"","选项E":"","选项D":"getInputStream()","答案":"C","选项C":"getOutputStream()","选项B":"getLocalPort()","选项A":"getInetAddress()","类型":"1-单选"},{"题干":"关于Java网络编程，使用UDP套接字通信时，哪个方法用于接收数据","选项F":"","选项E":"","选项D":"listen()","答案":"B","选项C":"accept()","选项B":"receive()","选项A":"read()","类型":"1-单选"},{"题干":"关于Java网络编程，如果在关闭socket时发生一个I/O错误，会抛出","选项F":"","选项E":"","选项D":"MalformedURLException","答案":"A","选项C":"SocketException","选项B":"UnknownHostException","选项A":"IOException","类型":"1-单选"},{"题干":"关于Java网络编程，InetAddress类中哪个方法可实现正向名称解析","选项F":"","选项E":"","选项D":"getByName()","答案":"B","选项C":"getHostName()","选项B":"getHostAddress()","选项A":"isReachable()","类型":"1-单选"},{"题干":"关于Java网络编程，Java提供的类InetAddress来进行有关Internet地址的操作","选项F":"","选项E":"","选项D":"InetAddress","答案":"D","选项C":"DatagramSocket","选项B":"ServerSocket","选项A":"Socket","类型":"1-单选"},{"题干":"关于Java网络编程，ServerSocket运行时如果无法绑定到端口，会抛出","选项F":"","选项E":"","选项D":"MalformedURLException","答案":"A","选项C":"SocketException","选项B":"UnknownHostException","选项A":"BindException","类型":"1-单选"},{"题干":"关于Java网络编程，哪个类的对象中包含有Internet地址","选项F":"","选项E":"","选项D":"ServerSocket","答案":"C","选项C":"InetAddress","选项B":"DatagramSocket","选项A":"Socket","类型":"1-单选"},{"题干":"关于Java网络编程，当找不到客户的服务器地址时会抛出","选项F":"","选项E":"","选项D":"MalformedURLException","答案":"B","选项C":"SocketException","选项B":"UnknownHostException","选项A":"IOException","类型":"1-单选"},{"题干":"java网络编程中，ServerSocket serverSocket = new ServerSocket(8081);服务器绑定的端口是","选项F":"","选项E":"","选项D":"808","答案":"C","选项C":"8081","选项B":"8080","选项A":"80","类型":"1-单选"},{"题干":"java网络编程中，关闭Socket连接的方法是","选项F":"","选项E":"","选项D":"closed()","答案":"A","选项C":"over()","选项B":"finish()","选项A":"close()","类型":"1-单选"},{"题干":"关于Java网络编程，Socket获取远程服务端的端口的方法是","选项F":"","选项E":"","选项D":"getLocalAddress","答案":"C","选项C":"getPort()","选项B":"getLocalPort()","选项A":"getInetAddress()","类型":"1-单选"},{"题干":"关于Java网络编程，TCP端口和UDP端口可以同时使用相同的端口吗？","选项F":"","选项E":"","选项D":"不可以","答案":"B","选项C":"不确定","选项B":"可以","选项A":"运行异常","类型":"1-单选"},{"题干":"关于Java网络编程，网络编程有哪些要素","选项F":"","选项E":"","选项D":"安全","答案":"ABC","选项C":"传输协议","选项B":"端口号","选项A":"IP地址","类型":"2-多选"},{"题干":"关于Java网络编程，下面的什么类能够支持TCP/IP连接","选项F":"","选项E":"","选项D":"ServerSocket","答案":"CD","选项C":"Socket","选项B":"Packet","选项A":"InetAddress","类型":"2-多选"},{"题干":"关于Java网络编程，以下说法中关于UDP协议的说法正确的是","选项F":"","选项E":"","选项D":"面向连接","答案":"AB","选项C":"占用系统资源多、效率低","选项B":"是不可靠协议","选项A":"不需要建立连接","类型":"2-多选"},{"题干":"关于Java网络编程，下面关于Socket编程说法正确的是","选项F":"","选项E":"","选项D":"通过Socket可以在通信双方主机之间传送Java对象。","答案":"ABD","选项C":"通过Socket获得的是字节流，因此不能发送字符信息。","选项B":"通过Socket可以获得字节输出流可以向对象Socket发送信息。","选项A":"通过Socket可以获得字节输入流，以接收对方Socket发来的信息。","类型":"2-多选"},{"题干":"关于Java网络编程，以下说法中关于TCP协议的说法正确的是","选项F":"","选项E":"","选项D":"面向无连接","答案":"ABC","选项C":"效率稍低","选项B":"安全可靠","选项A":"面向连接","类型":"2-多选"},{"题干":"Java网络编程中，以下说法中关于UDP协议的说法正确的是","选项F":"","选项E":"","选项D":"非常简单的协议，可以广播发送","答案":"AD","选项C":"占用系统资源多、效率低","选项B":"面向连接","选项A":"发送不管对方是否准备好，接收方收到也不确认","类型":"2-多选"},{"题干":"关于Java网络编程，下面关于ServerSocket的描述正确的是","选项F":"","选项E":"","选项D":"一个ServerSocket只能在一个端口监听，因此一个ServerSocket只能接收到一个客户端请求。","答案":"ABC","选项C":"ServerSocket通过accept()方法监听等待客户端的请求，未收到客户端的连接请求之前当前线程处于阻塞状态。","选项B":"ServerSocket仅用于监听客户端的发起的连接请求，一旦受到客户端请求即返回一个Socket与客户端通信。ServerSocket并不负责与客户单通信。","选项A":"ServerSocket表示服务器端的倾听Socket，等待客户机发起TCP连接。","类型":"2-多选"},{"题干":"关于Java网络编程，Java网络程序设计中，下列正确的描述是","选项F":"","选项E":"","选项D":"Java网络接口支持IP以上的所有高层协议","答案":"AD","选项C":"Java网络接口只支持UDP以及其上层协议","选项B":"Java网络接口只支持TCP以及其上层协议","选项A":"Java网络编程API建立在Socket基础之上","类型":"2-多选"},{"题干":"关于Java网络编程，哪些是DatagramSocket的常用构造方法","选项F":"","选项E":"","选项D":"DatagramSocket(int port, String addr)","答案":"ABC","选项C":"DatagramSocket(int port,InetAddress addr)","选项B":"DatagramSocket(int port)","选项A":"DatagramSocket()","类型":"2-多选"},{"题干":"关于Java网络编程，ServerSocket有哪些常用的构造方法","选项F":"","选项E":"","选项D":"ServerSocket()","答案":"ABCD","选项C":"ServerSocket(int port, int backlog, InetAddress bindAddr)","选项B":"ServerSocket(int port, int backlog)","选项A":"ServerSocket(int port)","类型":"2-多选"},{"题干":"关于Java网络编程，使用UDP通信时，用DatagramPacket类把要发送的信息打包","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"关于Java网络编程，TCP协议一种面向连接的、可靠的、基于字节流的通信协议 。","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"关于Java网络编程，进程利用Socket建立与其他进程的连接","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"关于Java网络编程，在创建Socket的同时会自动向服务器发起连接，因此使用完毕也不必显式关闭，它会自动关闭释放资源。","选项F":"","选项E":"","选项D":"","答案":"B","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"关于Java网络编程，在Socket编程中，IP地址用来标志一台计算机，但是一台计算机上可能提供多种应用程序，使用端口来区分这些应用程序。","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"关于Java网络编程，TCP、UDP都是基于TCP协议的应用层协议。","选项F":"","选项E":"","选项D":"","答案":"B","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"TCP的性能会比UDP低，但是可靠性会比UDP好很多。","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"TCP的数据是流，而UDP则是基于数据包。","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"长连接是指：建立SOCKET连接后，不管是否使用，一致保持连接。","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"关于Java网络编程，数据报传输是可靠的，包按顺序先后达到","选项F":"","选项E":"","选项D":"","答案":"B","选项C":"","选项B":"","选项A":"","类型":"0-判断"}]