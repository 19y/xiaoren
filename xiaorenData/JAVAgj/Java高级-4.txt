[{"题干":"c 代表类类型，con 代表构造，下列选项中通过反射创建对象，不正确的是","选项F":"","选项E":"","选项D":"con.newInstance(Person.class);","答案":"A","选项C":"con.newInstance();","选项B":"c.newInstance();","选项A":"c.newInstance(\"aa\");","类型":"1-单选"},{"题干":"下列选项中，能够获取类加载器的方法是","选项F":"","选项E":"","选项D":"getModify();","答案":"C","选项C":"getClassLoader();","选项B":"newInstance();","选项A":"getSuperclass();","类型":"1-单选"},{"题干":"下列选项中，通过反射获取方法正确的是","选项F":"","选项E":"","选项D":"new Too().getClass().getConstractors();","答案":"C","选项C":"new Too().getClass().getMethods();","选项B":"Too.class.getPackage();","选项A":"Too.class.getFields();","类型":"1-单选"},{"题干":"下列选项中，可以通过反射获取父类的是","选项F":"","选项E":"","选项D":"getSuperclass();","答案":"D","选项C":"newInstance();","选项B":"getMethod();","选项A":"getClassLoader();","类型":"1-单选"},{"题干":"1533518078561下列选项中，可以获取本类中声明的所有方法，包括私有方法的是","选项F":"","选项E":"","选项D":"c1.getDeclaredFields();","答案":"A","选项C":"c1.getFields();","选项B":"c1.getMethods();","选项A":"c1.getDeclaredMethods();","类型":"1-单选"},{"题干":"下列选项中，通过反射获取属性正确的是","选项F":"","选项E":"","选项D":"Field field = Person.class.getDeclaredField();","答案":"A","选项C":"Field field = Person.class.getDeclaredFields();","选项B":"Field field = Person.class.getField();","选项A":"Field[] fields = Person.class.getFields();","类型":"1-单选"},{"题干":"下列选项中，反射说法正确的是","选项F":"","选项E":"","选项D":"虚拟机不能创建 Class 类型的对象","答案":"B","选项C":"我们可以通过类名.getClass()创建 Class 对象","选项B":"Class 的对象可以创建对应的类类型的对象","选项A":"Class的对象可以 new 出来","类型":"1-单选"},{"题干":"下列选项中，通过反射调用方法的方法是哪个","选项F":"","选项E":"","选项D":"getField()","答案":"C","选项C":"invoke()","选项B":"getMethod()","选项A":"invode()","类型":"1-单选"},{"题干":"下列选项中，MySQL创建表关键字的是","选项F":"","选项E":"","选项D":"drop","答案":"B","选项C":"update","选项B":"create","选项A":"insert","类型":"1-单选"},{"题干":"1533537306278下列选项中，对象名.getDeclaredFields()返回类型为","选项F":"","选项E":"","选项D":"Queue","答案":"C","选项C":"Array","选项B":"Map","选项A":"List","类型":"1-单选"},{"题干":"有关java反射，使用反射机制获取一个类的属性，下列关于getField()方法说法正确的是","选项F":"","选项E":"","选项D":"该方法可以获取私有属性，但使用前必须先调用setAccessible(true)","答案":"A","选项C":"该方法可以获取所有属性","选项B":"该方法只能获取私有属性","选项A":"该方法需要一个String类型的参数来指定要获取的属性名","类型":"1-单选"},{"题干":"有关java反射，反射机制的说法错误的是哪个","选项F":"","选项E":"","选项D":"暴力反射可以获取类中私有的属性和方法","答案":"B","选项C":"反射可以获取类中所有的属性和方法","选项B":"反射机制指的是在程序编译期间，通过.class文件加载并使用一个类的过程","选项A":"反射机制指的是在程序运行过程中，通过.class文件加载并使用一个类的过程","类型":"1-单选"},{"题干":"java中，下面哪个是short数据类型变量的取值范围","选项F":"","选项E":"","选项D":"2147483648到2147483647","答案":"C","选项C":"-32768到32767","选项B":"0到65535","选项A":"-128到127","类型":"1-单选"},{"题干":"java中，哪些是将一个十六进制值赋值给一个long型变量","选项F":"","选项E":"","选项D":"long number=0x345L;","答案":"D","选项C":"long number=0345L;","选项B":"long number=0345;","选项A":"long number=345L;","类型":"1-单选"},{"题干":"有关java反射，以下说法正确的是哪一项","选项F":"","选项E":"","选项D":"User.class.getDeclaredMethods();返回User类的所有方法，但不包括父类的方法","答案":"D","选项C":"User.class.getMethods();返回User类的所有方法，包括父类的所有方法","选项B":"User.class.getFields();返回User类及其父类的所有字段，包括父类公有的、受保护的、默认的、私有的","选项A":"User.class.getDeclaredFields();返回User类的所有字段，包括公有的、受保护的、默认的、私有的以及继承父类所有的字段","类型":"1-单选"},{"题干":"java中，下面的哪些答案可以用以表示八进制8","选项F":"","选项E":"","选项D":"0x8","答案":"A","选项C":"08","选项B":"0x10","选项A":"010","类型":"1-单选"},{"题干":"java中，main()方法的返回类型是什么？","选项F":"","选项E":"","选项D":"static","答案":"B","选项C":"boolean","选项B":"void","选项A":"int","类型":"1-单选"},{"题干":"有关java反射，哪种类可以获取和设置类的中属性值","选项F":"","选项E":"","选项D":"Constructor类","答案":"B","选项C":"Method类","选项B":"Field类","选项A":"Class类","类型":"1-单选"},{"题干":"有关java反射，getField(String name)的返回类型是","选项F":"","选项E":"","选项D":"Fields","答案":"A","选项C":"Method","选项B":"Field []","选项A":"Field","类型":"1-单选"},{"题干":"有关java反射，对性能有什么影响","选项F":"","选项E":"","选项D":"有时候提高，有时候降低","答案":"B","选项C":"没有任何影响","选项B":"降低了性能","选项A":"提高了性能","类型":"1-单选"},{"题干":"java中，有整形数组：int []x={12,35,8,7,2};调用方法Arrays.sort(x)后，数组x中的元素值依次是","选项F":"","选项E":"","选项D":"8 7 12 35 2","答案":"A","选项C":"35 12 8 7 2","选项B":"12 35 8 7 2","选项A":"2 7 8 12 35","类型":"1-单选"},{"题干":"java中，有数组boolean []x=new boolean[3];那么b[1]的值为","选项F":"","选项E":"","选项D":"true","答案":"C","选项C":"false","选项B":"null","选项A":"0","类型":"1-单选"},{"题干":"1533519019065下列选项中，可以获取类类型的是","选项F":"","选项E":"","选项D":"Class�c3�=�new�Person().getClass();","答案":"ABD","选项C":"Class�c4�=�new�Class(\"entity.Person\");","选项B":"Class�c2�=�Class.forName(\"entity.Person\");","选项A":"Class�c1�=�Person.class;","类型":"2-多选"},{"题干":"下列选项中，通过反射获取构造方法不正确的是","选项F":"","选项E":"","选项D":"Class clazz = Person.class.getConstructor();","答案":"AD","选项C":"Constructor cons = Person.class.getConstructor();","选项B":"Constructor[] cons = Person.class.getDeclaredConstructors();","选项A":"Constructor[] cons = Person.class.getDeclaredConstructor();","类型":"2-多选"},{"题干":"List接口的常用实现类包括哪些？","选项F":"","选项E":"","选项D":"HashSet","答案":"AB","选项C":"Set","选项B":"LinkedList","选项A":"ArrayList","类型":"2-多选"},{"题干":"下列选项中哪些可以通过反射获取","选项F":"","选项E":"","选项D":"共有方法","答案":"ABCD","选项C":"构造","选项B":"私有属性","选项A":"私有方法","类型":"2-多选"},{"题干":"下列选项中属于泛型分类的是","选项F":"","选项E":"","选项D":"接口泛型","答案":"ACD","选项C":"方法泛型","选项B":"属性泛型","选项A":"类泛型","类型":"2-多选"},{"题干":"java中，下面哪些不是java的原始数据类型","选项F":"","选项E":"","选项D":"float","答案":"BC","选项C":"unit","选项B":"Boolean","选项A":"short","类型":"2-多选"},{"题干":"有关java反射，通过反射获取构造方法正确的是","选项F":"","选项E":"","选项D":"Constructor clazz = Person.class.getConstructor();","答案":"BD","选项C":"Constructor cons = Person.class.getConstructors();","选项B":"Constructor[] cons = Person.class.getDeclaredConstructors();","选项A":"Constructor[] cons = Person.class.getDeclaredConstructor();","类型":"2-多选"},{"题干":"有关java反射，通过反射机制可以访问java对象的什么内容","选项F":"","选项E":"","选项D":"父类和父接口","答案":"ABCD","选项C":"方法","选项B":"构造方法","选项A":"属性","类型":"2-多选"},{"题干":"有关java反射，反射有哪些作用","选项F":"","选项E":"","选项D":"增加程序的灵活性","答案":"ABCD","选项C":"生成动态代理","选项B":"以实现软件工程理论里所提及的类与类，模块与模块之间的解耦","选项A":"可以通过配置文件来动态配置和加载类","类型":"2-多选"},{"题干":"有关java反射，Java的反射机制的实现要借助于哪些类","选项F":"","选项E":"","选项D":"Method","答案":"ABCD","选项C":"Field","选项B":"Constructor","选项A":"Class","类型":"2-多选"},{"题干":"有关java中接口的说法哪个是错误的","选项F":"","选项E":"","选项D":"接口不运行继承","答案":"ACD","选项C":"若一个类要实现一个接口，则用到extends关键字","选项B":"若一个类要实现一个接口，则用到implements关键字","选项A":"接口中含有具体方法的实现代码","类型":"2-多选"},{"题干":"Java反射机制只能获取方法、属性、接口","选项F":"","选项E":"","选项D":"","答案":"B","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"通过反射技术，打破封装的方法是setAccessable(true)","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"java正则表达式中\\\\D匹配的是数字","选项F":"","选项E":"","选项D":"","答案":"B","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"Java反射中，如果想知道类都实现了哪些接口，调用的方法是getInterface()","选项F":"","选项E":"","选项D":"","答案":"B","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"1533195077724Java语言引用泛型的本质是参数化类型","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"java反射可以增加程序的灵活性","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"有关java反射，反射机制指的是在程序运行过程中，通过.class文件加载并使用一个类的过程","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"java反射中，getDeclaredFields()返回一个数组","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"有关java反射，使用getDeclaredMethods(user)获取user对象的所有方法","选项F":"","选项E":"","选项D":"","答案":"B","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"java反射中，getDeclaredField(String name)返回一个Field对象数组","选项F":"","选项E":"","选项D":"","答案":"B","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"Java中，一个类可以实现多个接口","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"}]