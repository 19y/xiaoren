[{"题干":"mybatis中的parameterType属性的作用","选项F":"","选项E":"","选项D":"object","答案":"B","选项C":"List","选项B":"传入的参数的类型","选项A":"所返回的List的泛型","类型":"1-单选"},{"题干":"拦截器最底层是通过什么技术实现的","选项F":"","选项E":"","选项D":"拦截器与flter的本质是一样的","答案":"A","选项C":"所有mvc框架的核心都是拦截器","选项B":"所有的mvc框架都有拦截器","选项A":"反射","类型":"1-单选"},{"题干":"Java中定义常量需要的关键字为","选项F":"","选项E":"","选项D":"final","答案":"D","选项C":"abstract","选项B":"var","选项A":"const","类型":"1-单选"},{"题干":"int a=2;int b=3; int c=a>b?0:2。则c的值为","选项F":"","选项E":"","选项D":"3","答案":"C","选项C":"2","选项B":"1","选项A":"0","类型":"1-单选"},{"题干":"Java代码：int a = 3 /10;则a的值为","选项F":"","选项E":"","选项D":"1","答案":"C","选项C":"0","选项B":"0.3","选项A":"3","类型":"1-单选"},{"题干":"代码System.out.println(5 / 2);的运行结果为（  ）","选项F":"","选项E":"","选项D":"输出5 /2","答案":"C","选项C":"输出2","选项B":"输出0","选项A":"输出2.5","类型":"1-单选"},{"题干":"下列代码的执行结果是:\n　　public\u00A0class\u00A0Test3{\n　　public\u00A0static\u00A0void\u00A0main(String\u00A0args[]){\n　　System.out.println(100%3);\n　　System.out.println(100%3.0);\n　　}\n　　}","选项F":"","选项E":"","选项D":"1.0和1.0","答案":"B","选项C":"1.0和1","选项B":"1和1.0","选项A":"1和1","类型":"1-单选"},{"题干":"int a=2;int b=3; int c=a>b?0:1。则c的值为（  ）","选项F":"","选项E":"","选项D":"3","答案":"B","选项C":"2","选项B":"1","选项A":"0","类型":"1-单选"},{"题干":"Java代码char c='c';则下列说法中正确的是","选项F":"","选项E":"","选项D":"其余说法均不对","答案":"B","选项C":"变量c在内存中占2个字节的存储空间","选项B":"变量c在内存中占1个字节的存储空间","选项A":"该代码不正确","类型":"1-单选"},{"题干":"有Java代码char\u00A0c='c';则以下说法中正确的是（\u00A0\u00A0）","选项F":"","选项E":"","选项D":"其余说法均不对","答案":"B","选项C":"变量c在内存中占2个字节的存储空间","选项B":"变量c在内存中占1个字节的存储空间","选项A":"该代码不正确","类型":"1-单选"},{"题干":"在 spring的 TransactionDefinition接口中PROPAGATION_REQUIRES_NEW含义为？","选项F":"","选项E":"","选项D":"新建事务，如果当前存在事务，把当前事务挂起","答案":"D","选项C":"支持当前事务，如果当前没有事务，就抛出异常","选项B":"支持当前事务，如果当前没有事务，就以非事务方式执行","选项A":"支持当前事务，如果当前没有事务，就新建一个事务。这是最常见的选择","类型":"1-单选"},{"题干":"事务特性不包含","选项F":"","选项E":"","选项D":"一致性","答案":"AB","选项C":"隔离性","选项B":"独立性","选项A":"双重性","类型":"2-多选"},{"题干":"springmvc配置拦截器可能使用到的标签是","选项F":"","选项E":"","选项D":"property","答案":"ABCD","选项C":"mvc:interceptor","选项B":"mvc:interceptors","选项A":"bean","类型":"2-多选"},{"题干":"ssm整合web.xml的描述恰当的是","选项F":"","选项E":"","选项D":"配置springmvc核心控制器使用filter标签","答案":"AB","选项C":"经常被用于注入数据源","选项B":"位置在web-inf下","选项A":"需要配置springmvc的核心控制器","类型":"2-多选"},{"题干":"关于springmvc框架以下理解正确的是","选项F":"","选项E":"","选项D":"apache公司的产品","答案":"AB","选项C":"属于Jboss组织的产品","选项B":"典型的、优秀的、开源的控制层框架","选项A":"springmvc属于spring的一部分","类型":"2-多选"},{"题干":"属于mvc框架的是","选项F":"","选项E":"","选项D":"struts2","答案":"CD","选项C":"springmvc","选项B":"mybatis","选项A":"spring","类型":"2-多选"},{"题干":"如下那些选项是spring的TransactionDefinition接口的传播属性?","选项F":"","选项E":"","选项D":"PROPAGATION_NOT_SUPPORTED--以非事务方式执行操作，如果当前存在事务，就把当前事务挂起","答案":"ABCD","选项C":"PROPAGATION_MANDATORY--支持当前事务，如果当前没有事务，就抛出异常","选项B":"PROPAGATION_SUPPORTS--支持当前事务，如果当前没有事务，就以非事务方式执行","选项A":"PROPAGATION_NEVER--以非事务方式执行，如果当前存在事务，则抛出异常。","类型":"2-多选"},{"题干":"拦截器可以通过jdk或者cglib动态代理去模拟实现，只不过不同的动态代理在实现上有所区别","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"springmvc拦截器方法有preHandle、postHandle、afterCompletion,3个方法都是核心方法只不过根据不同的需求选择不同的方法","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"springmvc中在目标方法执行之前会被触发的方法是preHandle","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"拦截器与过滤器的本质都是反射","选项F":"","选项E":"","选项D":"","答案":"B","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"所有的mvc框架都有拦截器，所有mvc框架的核心控制器的本质都是filter","选项F":"","选项E":"","选项D":"","答案":"B","选项C":"","选项B":"","选项A":"","类型":"0-判断"}]