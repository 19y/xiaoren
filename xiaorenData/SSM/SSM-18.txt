[{"题干":"springdata接口叙述正确的是","选项F":"","选项E":"","选项D":"管理框架，相当于spring","答案":"A","选项C":"不可以使用sql的持久层框架","选项B":"控制层框架","选项A":"持久层框架","类型":"1-单选"},{"题干":"以下不属于JSP内置对象的是（）。","选项F":"","选项E":"","选项D":"response","答案":"A","选项C":"request","选项B":"session","选项A":"cookie","类型":"1-单选"},{"题干":"以下属于JSP作用域对象的是（）。","选项F":"","选项E":"","选项D":"response","答案":"B","选项C":"out","选项B":"session","选项A":"cookie","类型":"1-单选"},{"题干":"下面关于cookie存储信息的说法中正确的是（）。","选项F":"","选项E":"","选项D":"cookie中要存在中文，需要先对要存放的值进行URL编码","答案":"D","选项C":"cookie中不可以存放中文","选项B":"cookie中默认的编码是UTF-8","选项A":"为了在cookie中保存中文信息，可以通过cookie.setCharacterEncoding(\"UTF-8\")来设置编码格式","类型":"1-单选"},{"题干":"关于cookie的过期时间，以下说法正确的是（）。","选项F":"","选项E":"","选项D":"如果没有设置cookie的过期时间，则默认为永不过期","答案":"A","选项C":"在代码中设置的过期时间，其单位为分钟。","选项B":"cookie的默认过期时间是30分钟","选项A":"如果没有设置过期时间，则浏览器关闭后cookie将立即消失","类型":"1-单选"},{"题干":"关于以下创建Cookie的代码说法正确的是（）。Cookie\u00A0c1\u00A0=\u00A0new\u00A0Cookie(\"user\",\u00A0“tom”);\nc1.setMaxAge(30);","选项F":"","选项E":"","选项D":"从创建了c1之后，经过30分钟该对象会被自动销毁","答案":"B","选项C":"从创建了c1之后，经过30秒该对象会被自动销毁","选项B":"c1的过期时间为30秒","选项A":"c1的过期时间为30分钟","类型":"1-单选"},{"题干":"SpringMVC中自定义拦截器实现的接口是（）","选项F":"","选项E":"","选项D":"Filter","答案":"A","选项C":"HandlerFilter","选项B":"Interceptor","选项A":"HandlerInterceptor","类型":"1-单选"},{"题干":"SpringMVC中拦截器中的方法preHandle的返回类型是（）","选项F":"","选项E":"","选项D":"String","答案":"B","选项C":"int","选项B":"boolean","选项A":"void","类型":"1-单选"},{"题干":"SpringMVC中拦截器可以实现（）","选项F":"","选项E":"","选项D":"以上说法都不正确","答案":"A","选项C":"事务控制","选项B":"数据库是否已连接验证","选项A":"用户是否已登录","类型":"1-单选"},{"题干":"SpringMVC中＠RequestＭapping的属性不包括（）","选项F":"","选项E":"","选项D":"method","答案":"A","选项C":"value","选项B":"produces","选项A":"type","类型":"1-单选"},{"题干":"SpringMVC中拦截器的实现方式是（）","选项F":"","选项E":"","选项D":"继承InterceptorAdapter类","答案":"AB","选项C":"实现Interceptor接口","选项B":"继承HandleInterceptorAdapter类","选项A":"实现HandleInterceptor接口","类型":"2-多选"},{"题干":"SpringMVC中控制器组件包括（）","选项F":"","选项E":"","选项D":"ModelAndView","答案":"ABC","选项C":"处理业务的Controller组件","选项B":"HandlerMapping组件","选项A":"核心控制器DispatcherServlet","类型":"2-多选"},{"题干":"SpringMVC提供了丰富的前台参数值获取方案，以下不是获取前台数据的方式是（）","选项F":"","选项E":"","选项D":"RequestMapping","答案":"BD","选项C":"参数","选项B":"ActionForm","选项A":"getParameter","类型":"2-多选"},{"题干":"SpringMVC拦截器可以实现的功能有（）","选项F":"","选项E":"","选项D":"日志记录","答案":"ABCD","选项C":"可以解决静态资源被拦截","选项B":"性能监测","选项A":"登录验证","类型":"2-多选"},{"题干":"SSH整合过程中，对于Hibernate支持的模块包括（）","选项F":"","选项E":"","选项D":"Spring\u00A0Web模块","答案":"AB","选项C":"Spring\u00A0MVC模块","选项B":"Spring\u00A0ORM模块","选项A":"Spring核心模块","类型":"2-多选"},{"题干":"SpringMVC中拦截器和事务控制的实现思想是AOP。","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"SpringMVC中拦截器和过滤器没有任何区别。","选项F":"","选项E":"","选项D":"","答案":"B","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"SpringMVC中的拦截器是基于反射机制实现的，而过滤器是基于方法回调机制实现。","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"SpringMVC中拦截器postHandle处理器执行后、视图处理前调用。此时可以通过modelAndView对象对模型数据进行处理或对视图进行处理。","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"1533095464128SpringMVC中自定义拦截器可以继承HandlerInterceptorAdapter类。","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"},{"题干":"spring data jpa 提供了:像操作对象一样操作数据库标准的封装","选项F":"","选项E":"","选项D":"","答案":"A","选项C":"","选项B":"","选项A":"","类型":"0-判断"}]